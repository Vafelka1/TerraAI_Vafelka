{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Обработка текста. Механизм Transformers Ultra pro | УИИ","provenance":[{"file_id":"1xxS3Ei1izxIexApV4Zq7w-AhxmjaPfrn","timestamp":1641490683536}],"collapsed_sections":[],"machine_shape":"hm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"4e4d30a285494b049fec746ec9da9f86":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_0b191be647524d6faec54cc8e74488ac","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_636ce7fba4654dce8f8376f5d7ac23f8","IPY_MODEL_7e92603830b347c6a45cfc802df28101","IPY_MODEL_31893aba41cb4524be1174705e361d29"]}},"0b191be647524d6faec54cc8e74488ac":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"636ce7fba4654dce8f8376f5d7ac23f8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_d719cb8728de4d929c7f863d76badaeb","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":"Dl Completed...: 100%","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_bb7e0042776b4abfbfe6f21924b924e7"}},"7e92603830b347c6a45cfc802df28101":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_e99a122cb68746e38d1eb7605b3b471a","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_ca2d1b3363fc4ab5a336e711090c81e9"}},"31893aba41cb4524be1174705e361d29":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_6c43db4e363342f8af0ef1c16ce568ef","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 1/1 [00:13&lt;00:00, 10.15s/ url]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_433917afeb2a4be591fd7333767f929d"}},"d719cb8728de4d929c7f863d76badaeb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"bb7e0042776b4abfbfe6f21924b924e7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"e99a122cb68746e38d1eb7605b3b471a":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"ca2d1b3363fc4ab5a336e711090c81e9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":"20px","min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"6c43db4e363342f8af0ef1c16ce568ef":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"433917afeb2a4be591fd7333767f929d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"e4cfa79f4f2d47fa8dc9930188b2e794":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_dcf00a99a79143bba8285c64f2248fdf","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_af5f0fffa6d24cf2ba95c58629d98ecb","IPY_MODEL_7e2238f1d30249bea9ff754175759a80","IPY_MODEL_fc824b6b309340b2871cde878998314d"]}},"dcf00a99a79143bba8285c64f2248fdf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"af5f0fffa6d24cf2ba95c58629d98ecb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_0c5a557b602f499786c8e75dc2296256","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":"Dl Size...: 100%","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_4b3ea1124c5a4379b4445593d148d00f"}},"7e2238f1d30249bea9ff754175759a80":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_4b2a06572ca04831be6749aeef4914e3","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_7e1c5545979d4260b15f8efd8d96b4bd"}},"fc824b6b309340b2871cde878998314d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_6f54550ff5e74939ac105de20bb55915","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 124/124 [00:13&lt;00:00, 15.58 MiB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_009fb7b56c9d43b2b24871d79ae2138b"}},"0c5a557b602f499786c8e75dc2296256":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"4b3ea1124c5a4379b4445593d148d00f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"4b2a06572ca04831be6749aeef4914e3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"7e1c5545979d4260b15f8efd8d96b4bd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":"20px","min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"6f54550ff5e74939ac105de20bb55915":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"009fb7b56c9d43b2b24871d79ae2138b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"25b341f97ecb4929b6c3be60ff69f211":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_ef48d97d931d48188be4fba7d9bc6379","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_068c05494a144ab2b29c088fe29a91b1","IPY_MODEL_ffc09512c51e479d8350cc6e7244161a","IPY_MODEL_497c02b0e6064159b9685a9e373612b0"]}},"ef48d97d931d48188be4fba7d9bc6379":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"068c05494a144ab2b29c088fe29a91b1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_3388c3a79b174960ae5cb755530b2d90","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":"Extraction completed...: 100%","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_b10e8a05ec8644609a8a1b6df382c020"}},"ffc09512c51e479d8350cc6e7244161a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_80b03c3d6a2543a592a89c8ff4506b29","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"success","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_4cc10565c0c74be8a86a64930a84aeb4"}},"497c02b0e6064159b9685a9e373612b0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_55278344d904466e86b3933491de6ec5","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 1/1 [00:13&lt;00:00, 13.77s/ file]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_69fdd77a5ece4040a0d4c8c87ff9bedb"}},"3388c3a79b174960ae5cb755530b2d90":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"b10e8a05ec8644609a8a1b6df382c020":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"80b03c3d6a2543a592a89c8ff4506b29":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"4cc10565c0c74be8a86a64930a84aeb4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":"20px","min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"55278344d904466e86b3933491de6ec5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"69fdd77a5ece4040a0d4c8c87ff9bedb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"661f628e6abb4bf4878ca2b91d60f772":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_362154495ab9412cb1e99a51d321dda4","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_e724bf17f4284da788b338621939aa31","IPY_MODEL_2c8b3a4cd1344dca99f917e8e7beefce","IPY_MODEL_527b5c1fd42f4d7bb98c16bb27bb2e9e"]}},"362154495ab9412cb1e99a51d321dda4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"e724bf17f4284da788b338621939aa31":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_d789265ac8fe40b49b1d1091c44e94a3","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":"","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_b37a5663102548129338e9fb980b195f"}},"2c8b3a4cd1344dca99f917e8e7beefce":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_57ae910ead3e477eb2c275c805361679","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"info","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_e348a292393c4a03bc8c86cf5ba136e8"}},"527b5c1fd42f4d7bb98c16bb27bb2e9e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_2326b075c2cf4c678e97164d5f581bb5","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 207958/0 [00:28&lt;00:00, 7522.77 examples/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_2a8355818dc94f1b87f964a8008710f8"}},"d789265ac8fe40b49b1d1091c44e94a3":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"b37a5663102548129338e9fb980b195f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"57ae910ead3e477eb2c275c805361679":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"e348a292393c4a03bc8c86cf5ba136e8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":"20px","min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"2326b075c2cf4c678e97164d5f581bb5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"2a8355818dc94f1b87f964a8008710f8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"695b554b130e471d8180cc39b1e02a4d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_2709700fb2ac4a51b3cc4f6a0ec45e47","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_d3449028240f494e9365aa294453cabb","IPY_MODEL_a12b994510c34a8dbe08fd91d41a2abb","IPY_MODEL_e0b5155cc9c74f45b36a7361bd3b7310"]}},"2709700fb2ac4a51b3cc4f6a0ec45e47":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"d3449028240f494e9365aa294453cabb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_e51fe07b8d414da082b4db7a8210a653","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":"100%","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_5c384c06d5c243f8b4c6d6f143c38c3e"}},"a12b994510c34a8dbe08fd91d41a2abb":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_057aaee7e77d4bf0abd86ffaf6044075","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"danger","max":208106,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":208105,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_ebe59a77266d426b9e40fd1511faccf3"}},"e0b5155cc9c74f45b36a7361bd3b7310":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_7c8b60b3337e4a3cac7c4c1a8df0ac65","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 208105/208106 [00:00&lt;00:00, 383933.71 examples/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_6f552566bf0e4db4a5b33ff89e2fe33c"}},"e51fe07b8d414da082b4db7a8210a653":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"5c384c06d5c243f8b4c6d6f143c38c3e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"057aaee7e77d4bf0abd86ffaf6044075":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"ebe59a77266d426b9e40fd1511faccf3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7c8b60b3337e4a3cac7c4c1a8df0ac65":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"6f552566bf0e4db4a5b33ff89e2fe33c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"1ff32f1b12ee4f8a8d0a3265a8fb8f90":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_06b74879553f422bb46b43443bb16551","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_4d1f124d2d154311800939794c94c484","IPY_MODEL_c7b230a9fb16421ab0149f6847ac76a5","IPY_MODEL_939f828d28054a11aabc2d6967a9dc1c"]}},"06b74879553f422bb46b43443bb16551":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"4d1f124d2d154311800939794c94c484":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_613c950e93c242dea04a297db5017bb5","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":"","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_d93847a000f74ab995a87af1b9e4da97"}},"c7b230a9fb16421ab0149f6847ac76a5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_0c19ca89adbe44de8b8b931b1863f2f8","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"info","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_ee54dcdce0d746708bd85f18a4559467"}},"939f828d28054a11aabc2d6967a9dc1c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_9f46e4bf5a2f41c8ad699f6b8e08d525","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 4198/0 [00:00&lt;00:00, 7276.63 examples/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_fd6435524f4b45ba9cf48a0fc7fedf45"}},"613c950e93c242dea04a297db5017bb5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"d93847a000f74ab995a87af1b9e4da97":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"0c19ca89adbe44de8b8b931b1863f2f8":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"ee54dcdce0d746708bd85f18a4559467":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":"20px","min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"9f46e4bf5a2f41c8ad699f6b8e08d525":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"fd6435524f4b45ba9cf48a0fc7fedf45":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"9809bf72e1e1432e9fc51f3c37fbd684":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_c70761edb35147a6a89583302acf84d2","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_07a69dbe0dee4a19a947d55f7ff5ab22","IPY_MODEL_ad876c61da1c48d1b02e07ec45c01070","IPY_MODEL_dd5df70df97e4194b13edb1fadfb35d7"]}},"c70761edb35147a6a89583302acf84d2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"07a69dbe0dee4a19a947d55f7ff5ab22":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_a7907f7f9c22440e943a8d57aa6ff48a","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":"100%","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_2c4f30aa3bdc42beb86d3b8aa13131d5"}},"ad876c61da1c48d1b02e07ec45c01070":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_77b8e923daf14c74819feab9543fd28f","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"danger","max":4805,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":4804,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_cfb01e5182bd4f08b1f5baca9a9e2dc4"}},"dd5df70df97e4194b13edb1fadfb35d7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_5d53fd3532c449029ab6d15194aed3e5","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 4804/4805 [00:00&lt;00:00, 105826.87 examples/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_047f053433284545be70e8a9484baede"}},"a7907f7f9c22440e943a8d57aa6ff48a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"2c4f30aa3bdc42beb86d3b8aa13131d5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"77b8e923daf14c74819feab9543fd28f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"cfb01e5182bd4f08b1f5baca9a9e2dc4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"5d53fd3532c449029ab6d15194aed3e5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"047f053433284545be70e8a9484baede":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"b6237408939143b0b13e91f53a232ffe":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_1d3c63c3625041658fc8fde79c603d49","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_04affe26078f4678af822cc8db9a6fc8","IPY_MODEL_d37f4ddc0d6549d284b473fdbcd2d15c","IPY_MODEL_9ad49ecf025b4dd09690ef74b58e8c25"]}},"1d3c63c3625041658fc8fde79c603d49":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"04affe26078f4678af822cc8db9a6fc8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_b9e62567d6b645dfa005d8bb362641b3","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":"","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_0ba8333232084570b76533ddbbf5526a"}},"d37f4ddc0d6549d284b473fdbcd2d15c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_d448390435ac4328b714aafb58fc1ee8","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"info","max":1,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_029b47d3a693495d82710c7c0aea788e"}},"9ad49ecf025b4dd09690ef74b58e8c25":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_471a42df562b4901a61dc893f36cc8ff","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 4988/0 [00:00&lt;00:00, 7548.78 examples/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_ef925ea9419b46c5addcd1ad22214437"}},"b9e62567d6b645dfa005d8bb362641b3":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"0ba8333232084570b76533ddbbf5526a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"d448390435ac4328b714aafb58fc1ee8":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"029b47d3a693495d82710c7c0aea788e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":"20px","min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"471a42df562b4901a61dc893f36cc8ff":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"ef925ea9419b46c5addcd1ad22214437":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"ec14f1d983e64a15a0d562c9983f674b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_6f14b03163ef42ccb308ebbe363a8e46","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_18a95e38f74140bb897a9352adf51854","IPY_MODEL_a8c64e7707834aacb65803cf7c91b65f","IPY_MODEL_f77cb02a68dd4fe0bef341b8e583e017"]}},"6f14b03163ef42ccb308ebbe363a8e46":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"18a95e38f74140bb897a9352adf51854":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_3938e8c1d398478f9070b9fd482d60db","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":"100%","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_79a1446c8537479fa3b18e863a8c52b4"}},"a8c64e7707834aacb65803cf7c91b65f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_4d937ef0ea474cbfa1754dbea529bea4","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"danger","max":5476,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":5475,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_041ea26afced4819b6976b1a8a5b45f8"}},"f77cb02a68dd4fe0bef341b8e583e017":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_bb589c44f68e496d846a15a51ffeae0c","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 5475/5476 [00:00&lt;00:00, 120458.96 examples/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_bb3028a88f954d12859a2aae117fcc49"}},"3938e8c1d398478f9070b9fd482d60db":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"79a1446c8537479fa3b18e863a8c52b4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"4d937ef0ea474cbfa1754dbea529bea4":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"041ea26afced4819b6976b1a8a5b45f8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"bb589c44f68e496d846a15a51ffeae0c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"bb3028a88f954d12859a2aae117fcc49":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"code","metadata":{"id":"pJDFVpe9rAYP","executionInfo":{"status":"ok","timestamp":1641490787324,"user_tz":-180,"elapsed":2296,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["# датасет от tensorfolw, перевод португальских фраз на английский\n","import tensorflow_datasets as tfds \n","\n","# tensorflow\n","import tensorflow as tf \n","\n","# модуль отвечает за время и обработку временнЫх переменных\n","import time \n","\n","# numpy\n","import numpy as np \n","\n","# для отрисовки картинок в колабе\n","import matplotlib.pyplot as plt "],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":365,"referenced_widgets":["4e4d30a285494b049fec746ec9da9f86","0b191be647524d6faec54cc8e74488ac","636ce7fba4654dce8f8376f5d7ac23f8","7e92603830b347c6a45cfc802df28101","31893aba41cb4524be1174705e361d29","d719cb8728de4d929c7f863d76badaeb","bb7e0042776b4abfbfe6f21924b924e7","e99a122cb68746e38d1eb7605b3b471a","ca2d1b3363fc4ab5a336e711090c81e9","6c43db4e363342f8af0ef1c16ce568ef","433917afeb2a4be591fd7333767f929d","e4cfa79f4f2d47fa8dc9930188b2e794","dcf00a99a79143bba8285c64f2248fdf","af5f0fffa6d24cf2ba95c58629d98ecb","7e2238f1d30249bea9ff754175759a80","fc824b6b309340b2871cde878998314d","0c5a557b602f499786c8e75dc2296256","4b3ea1124c5a4379b4445593d148d00f","4b2a06572ca04831be6749aeef4914e3","7e1c5545979d4260b15f8efd8d96b4bd","6f54550ff5e74939ac105de20bb55915","009fb7b56c9d43b2b24871d79ae2138b","25b341f97ecb4929b6c3be60ff69f211","ef48d97d931d48188be4fba7d9bc6379","068c05494a144ab2b29c088fe29a91b1","ffc09512c51e479d8350cc6e7244161a","497c02b0e6064159b9685a9e373612b0","3388c3a79b174960ae5cb755530b2d90","b10e8a05ec8644609a8a1b6df382c020","80b03c3d6a2543a592a89c8ff4506b29","4cc10565c0c74be8a86a64930a84aeb4","55278344d904466e86b3933491de6ec5","69fdd77a5ece4040a0d4c8c87ff9bedb","661f628e6abb4bf4878ca2b91d60f772","362154495ab9412cb1e99a51d321dda4","e724bf17f4284da788b338621939aa31","2c8b3a4cd1344dca99f917e8e7beefce","527b5c1fd42f4d7bb98c16bb27bb2e9e","d789265ac8fe40b49b1d1091c44e94a3","b37a5663102548129338e9fb980b195f","57ae910ead3e477eb2c275c805361679","e348a292393c4a03bc8c86cf5ba136e8","2326b075c2cf4c678e97164d5f581bb5","2a8355818dc94f1b87f964a8008710f8","695b554b130e471d8180cc39b1e02a4d","2709700fb2ac4a51b3cc4f6a0ec45e47","d3449028240f494e9365aa294453cabb","a12b994510c34a8dbe08fd91d41a2abb","e0b5155cc9c74f45b36a7361bd3b7310","e51fe07b8d414da082b4db7a8210a653","5c384c06d5c243f8b4c6d6f143c38c3e","057aaee7e77d4bf0abd86ffaf6044075","ebe59a77266d426b9e40fd1511faccf3","7c8b60b3337e4a3cac7c4c1a8df0ac65","6f552566bf0e4db4a5b33ff89e2fe33c","1ff32f1b12ee4f8a8d0a3265a8fb8f90","06b74879553f422bb46b43443bb16551","4d1f124d2d154311800939794c94c484","c7b230a9fb16421ab0149f6847ac76a5","939f828d28054a11aabc2d6967a9dc1c","613c950e93c242dea04a297db5017bb5","d93847a000f74ab995a87af1b9e4da97","0c19ca89adbe44de8b8b931b1863f2f8","ee54dcdce0d746708bd85f18a4559467","9f46e4bf5a2f41c8ad699f6b8e08d525","fd6435524f4b45ba9cf48a0fc7fedf45","9809bf72e1e1432e9fc51f3c37fbd684","c70761edb35147a6a89583302acf84d2","07a69dbe0dee4a19a947d55f7ff5ab22","ad876c61da1c48d1b02e07ec45c01070","dd5df70df97e4194b13edb1fadfb35d7","a7907f7f9c22440e943a8d57aa6ff48a","2c4f30aa3bdc42beb86d3b8aa13131d5","77b8e923daf14c74819feab9543fd28f","cfb01e5182bd4f08b1f5baca9a9e2dc4","5d53fd3532c449029ab6d15194aed3e5","047f053433284545be70e8a9484baede","b6237408939143b0b13e91f53a232ffe","1d3c63c3625041658fc8fde79c603d49","04affe26078f4678af822cc8db9a6fc8","d37f4ddc0d6549d284b473fdbcd2d15c","9ad49ecf025b4dd09690ef74b58e8c25","b9e62567d6b645dfa005d8bb362641b3","0ba8333232084570b76533ddbbf5526a","d448390435ac4328b714aafb58fc1ee8","029b47d3a693495d82710c7c0aea788e","471a42df562b4901a61dc893f36cc8ff","ef925ea9419b46c5addcd1ad22214437","ec14f1d983e64a15a0d562c9983f674b","6f14b03163ef42ccb308ebbe363a8e46","18a95e38f74140bb897a9352adf51854","a8c64e7707834aacb65803cf7c91b65f","f77cb02a68dd4fe0bef341b8e583e017","3938e8c1d398478f9070b9fd482d60db","79a1446c8537479fa3b18e863a8c52b4","4d937ef0ea474cbfa1754dbea529bea4","041ea26afced4819b6976b1a8a5b45f8","bb589c44f68e496d846a15a51ffeae0c","bb3028a88f954d12859a2aae117fcc49"]},"id":"dhnpa99mrGQL","executionInfo":{"status":"ok","timestamp":1641490836151,"user_tz":-180,"elapsed":48833,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}},"outputId":"9088a066-e5c9-45a6-a32b-bef9fe28d841"},"source":["examples, metadata = tfds.load('ted_hrlr_translate/ru_to_en', \n","                               with_info=True, \n","                               as_supervised=True)\n","\n","# разделяем на обучающую и тестовую выборки\n","train_examples, val_examples = examples['train'], examples['validation'] "],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1mDownloading and preparing dataset ted_hrlr_translate/ru_to_en/1.0.0 (download: 124.94 MiB, generated: Unknown size, total: 124.94 MiB) to /root/tensorflow_datasets/ted_hrlr_translate/ru_to_en/1.0.0...\u001b[0m\n"]},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4e4d30a285494b049fec746ec9da9f86","version_minor":0,"version_major":2},"text/plain":["Dl Completed...: 0 url [00:00, ? url/s]"]},"metadata":{}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e4cfa79f4f2d47fa8dc9930188b2e794","version_minor":0,"version_major":2},"text/plain":["Dl Size...: 0 MiB [00:00, ? MiB/s]"]},"metadata":{}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"25b341f97ecb4929b6c3be60ff69f211","version_minor":0,"version_major":2},"text/plain":["Extraction completed...: 0 file [00:00, ? file/s]"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","\n","\n"]},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"661f628e6abb4bf4878ca2b91d60f772","version_minor":0,"version_major":2},"text/plain":["0 examples [00:00, ? examples/s]"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Shuffling and writing examples to /root/tensorflow_datasets/ted_hrlr_translate/ru_to_en/1.0.0.incompleteN4SANE/ted_hrlr_translate-train.tfrecord\n"]},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"695b554b130e471d8180cc39b1e02a4d","version_minor":0,"version_major":2},"text/plain":["  0%|          | 0/208106 [00:00<?, ? examples/s]"]},"metadata":{}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1ff32f1b12ee4f8a8d0a3265a8fb8f90","version_minor":0,"version_major":2},"text/plain":["0 examples [00:00, ? examples/s]"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Shuffling and writing examples to /root/tensorflow_datasets/ted_hrlr_translate/ru_to_en/1.0.0.incompleteN4SANE/ted_hrlr_translate-validation.tfrecord\n"]},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9809bf72e1e1432e9fc51f3c37fbd684","version_minor":0,"version_major":2},"text/plain":["  0%|          | 0/4805 [00:00<?, ? examples/s]"]},"metadata":{}},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b6237408939143b0b13e91f53a232ffe","version_minor":0,"version_major":2},"text/plain":["0 examples [00:00, ? examples/s]"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Shuffling and writing examples to /root/tensorflow_datasets/ted_hrlr_translate/ru_to_en/1.0.0.incompleteN4SANE/ted_hrlr_translate-test.tfrecord\n"]},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ec14f1d983e64a15a0d562c9983f674b","version_minor":0,"version_major":2},"text/plain":["  0%|          | 0/5476 [00:00<?, ? examples/s]"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\u001b[1mDataset ted_hrlr_translate downloaded and prepared to /root/tensorflow_datasets/ted_hrlr_translate/ru_to_en/1.0.0. Subsequent calls will reuse this data.\u001b[0m\n"]}]},{"cell_type":"markdown","metadata":{"id":"8Xf99UKtuVBa"},"source":["Взглянем на примеры:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aEIyigMAuVbh","executionInfo":{"status":"ok","timestamp":1641490836152,"user_tz":-180,"elapsed":31,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}},"outputId":"85945ac3-86b0-42cf-ab98-fbbfd05a5918"},"source":["[en.numpy() for ru, en in train_examples.take(10)]"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[b'c : success , the change is only coming through the barrel of the gun .',\n"," b'the documentation and the hands-on teaching methodology is also open-source and released as the creative commons .',\n"," b\"( video ) didi pickles : it 's four o'clock in the morning .\",\n"," b\"( laughter ) so now i 've been able to tidy up pictures that i 've wanted to tidy up for a long time .\",\n"," b'the light from the earth , some of it falls in , but some of it gets lensed around and brought back to us .',\n"," b'they debated , should it have one s or two ?',\n"," b'you slam them together , and if we are right , some of the energy of that collision will go into debris that flies off into these extra dimensions .',\n"," b'and it weights those together into an attention window , and it looks for the highest-scoring place \\xe2\\x80\\x94 the stuff where the most interesting stuff is happening \\xe2\\x80\\x94 and that is what its eyes then segue to .',\n"," b\"have you ever walked from one room to another and then forgotten why you 're there ?\",\n"," b\"it 's actually moved from the survival base of the pyramid to becoming a transformational role model for the world .\"]"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"QuMdZXj8rJMd","executionInfo":{"status":"ok","timestamp":1641491317874,"user_tz":-180,"elapsed":481734,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["tokenizer_en = tfds.deprecated.text.SubwordTextEncoder.build_from_corpus(\n","    (en.numpy() for ru, en in train_examples), target_vocab_size=2**13)\n","\n","tokenizer_ru = tfds.deprecated.text.SubwordTextEncoder.build_from_corpus(\n","    (ru.numpy() for ru, en in train_examples), target_vocab_size=2**13)"],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"krEZ_dNIuM9u"},"source":["Проверим как работает токенайзер на примере одной фразы"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KFRgBQrNrLfr","executionInfo":{"status":"ok","timestamp":1641491317881,"user_tz":-180,"elapsed":45,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}},"outputId":"785b148c-e8fd-4814-ec01-757fea7341b2"},"source":["# тестовая фраза\n","sample_string = 'Transformer is complicated.' \n","\n","# перегоним слова в токены\n","tokenized_string = tokenizer_en.encode(sample_string) \n","print ('Tokenized string is {}'.format(tokenized_string))\n","\n","# перегоним токены обратно в слова\n","original_string = tokenizer_en.decode(tokenized_string) \n","print ('The original string: {}'.format(original_string))\n","\n","# распишем какой токен чему соответсвует\n","for ts in tokenized_string:\n","  print ('{} ----> {}'.format(ts, tokenizer_en.decode([ts]))) \n","\n","# а точно исходная фраза соответствует дважды перекодированной?\n","assert original_string == sample_string "],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Tokenized string is [8073, 1034, 8104, 5774, 13, 5513, 8035]\n","The original string: Transformer is complicated.\n","8073 ----> T\n","1034 ----> ran\n","8104 ----> s\n","5774 ----> former \n","13 ----> is \n","5513 ----> complicated\n","8035 ----> .\n"]}]},{"cell_type":"markdown","metadata":{"id":"OzyLgPGiwWvd"},"source":["Создадим функцию, которая добавит токены `< start >` и `< end >` во все фразы в датасете. Это токены не 0 1 , здесь они равны размеры словаря, то есть больше на 1 и 2, чем последнее слово:  "]},{"cell_type":"code","metadata":{"id":"m7krXaWGrO2e","executionInfo":{"status":"ok","timestamp":1641491317883,"user_tz":-180,"elapsed":41,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["def encode(lang1, lang2):\n","  lang1 = [tokenizer_ru.vocab_size] + tokenizer_ru.encode(\n","      lang1.numpy()) + [tokenizer_ru.vocab_size+1]\n","\n","  lang2 = [tokenizer_en.vocab_size] + tokenizer_en.encode(\n","      lang2.numpy()) + [tokenizer_en.vocab_size+1]\n","  \n","  return lang1, lang2"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"zjhbAUSKrRND","executionInfo":{"status":"ok","timestamp":1641491317885,"user_tz":-180,"elapsed":42,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["def tf_encode(ru, en):\n","  result_ru, result_en = tf.py_function(encode, [ru, en], [tf.int64, tf.int64])\n","  result_ru.set_shape([None])\n","  result_en.set_shape([None])\n","\n","  return result_ru, result_en"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"kgtx_YZRrUT0","executionInfo":{"status":"ok","timestamp":1641491317886,"user_tz":-180,"elapsed":42,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["# размер буффеа в памяти при приготовления датасета\n","BUFFER_SIZE = 20000 \n","\n","# размер батча\n","BATCH_SIZE = 64  \n","\n","# ограничим максимальную длину фразу\n","MAX_LENGTH = 40  "],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"id":"Kr17q_wOrZyU","executionInfo":{"status":"ok","timestamp":1641491317887,"user_tz":-180,"elapsed":42,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["def filter_max_length(x, y, max_length=MAX_LENGTH):\n","    \n","  return tf.logical_and(tf.size(x) <= max_length, # вернем маску, она уберет впоследствии длииные фразы\n","                        tf.size(y) <= max_length)"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"v_Zp7UhVrcCj","executionInfo":{"status":"ok","timestamp":1641491317889,"user_tz":-180,"elapsed":42,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["# Прогоняем тектсы через токенайзер\n","train_dataset = train_examples.map(tf_encode) \n","\n","# Убираем длинные фразу\n","train_dataset = train_dataset.filter(filter_max_length) \n","\n","# cache the dataset to memory to get a speedup while reading from it.\n","\n","# Грузим в память\n","train_dataset = train_dataset.cache() \n","\n","# Делим на батчи и перемешиваем\n","train_dataset = train_dataset.shuffle(BUFFER_SIZE).padded_batch(BATCH_SIZE) \n","\n","# Кешируем датасет\n","train_dataset = train_dataset.prefetch(tf.data.experimental.AUTOTUNE) \n","\n","val_dataset = val_examples.map(tf_encode)\n","val_dataset = val_dataset.filter(filter_max_length).padded_batch(BATCH_SIZE)"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Eu9XDBbXrd_f","executionInfo":{"status":"ok","timestamp":1641491317890,"user_tz":-180,"elapsed":43,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}},"outputId":"2825abed-43cb-4454-d922-e53cd9cef198"},"source":["ru_batch, en_batch = next(iter(val_dataset))\n","\n","ru_batch, en_batch"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(<tf.Tensor: shape=(64, 38), dtype=int64, numpy=\n"," array([[8179,   57,   86, ...,    0,    0,    0],\n","        [8179,    3,   38, ...,    0,    0,    0],\n","        [8179,   57,  135, ...,    0,    0,    0],\n","        ...,\n","        [8179,    3,    7, ...,    0,    0,    0],\n","        [8179,  138,  250, ...,    0,    0,    0],\n","        [8179,   19,    7, ...,    0,    0,    0]])>,\n"," <tf.Tensor: shape=(64, 40), dtype=int64, numpy=\n"," array([[8245,   90,  101, ...,    0,    0,    0],\n","        [8245,   70,   25, ...,    0,    0,    0],\n","        [8245,   90,  153, ...,    0,    0,    0],\n","        ...,\n","        [8245,    4,   18, ...,    0,    0,    0],\n","        [8245,   19,   59, ...,    0,    0,    0],\n","        [8245,   24,   18, ...,    0,    0,    0]])>)"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","metadata":{"id":"gDH0SGFV33XD"},"source":["Функция для расчета аргументы sin и cos для позиционного кодирования"]},{"cell_type":"code","metadata":{"id":"JrZ906UOrgFh","executionInfo":{"status":"ok","timestamp":1641491317893,"user_tz":-180,"elapsed":40,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["def get_angles(pos, i, d_model):\n","    \n","  angle_rates = 1 / np.power(10000, (2 * (i//2)) / np.float32(d_model))\n","  return pos * angle_rates"],"execution_count":12,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TbkM1qKY4BNA"},"source":["Функция для расчета векторов позиционного кодирования"]},{"cell_type":"code","metadata":{"id":"lRNOsOpQriI1","executionInfo":{"status":"ok","timestamp":1641491317894,"user_tz":-180,"elapsed":41,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["def positional_encoding(position, d_model):\n","  angle_rads = get_angles(np.arange(position)[:, np.newaxis],\n","                          np.arange(d_model)[np.newaxis, :],\n","                          d_model)\n","  \n","  # apply sin to even indices in the array; 2i\n","  angle_rads[:, 0::2] = np.sin(angle_rads[:, 0::2])\n","  \n","  # apply cos to odd indices in the array; 2i+1\n","  angle_rads[:, 1::2] = np.cos(angle_rads[:, 1::2])\n","    \n","  pos_encoding = angle_rads[np.newaxis, ...]\n","    \n","  return tf.cast(pos_encoding, dtype=tf.float32)"],"execution_count":13,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9K_R_xKv4QqM"},"source":["Считаем вектора поцизионного кодирования"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"U1j5IJngrkVY","executionInfo":{"status":"ok","timestamp":1641491317895,"user_tz":-180,"elapsed":41,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}},"outputId":"9cfaa0c5-701b-473b-e0f8-0e82dfd5292f"},"source":["pos_encoding = positional_encoding(50, 512)\n","print (pos_encoding.shape)\n","\n","plt.pcolormesh(pos_encoding[0], cmap='RdBu')\n","plt.xlabel('Depth')\n","plt.xlim((0, 512))\n","plt.ylabel('Position')\n","plt.colorbar()\n","plt.show()"],"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["(1, 50, 512)\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"qjuiqQf7rvi7","executionInfo":{"status":"ok","timestamp":1641491317895,"user_tz":-180,"elapsed":37,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["class MultiHeadAttention(tf.keras.layers.Layer):\n","\n","  def __init__(self, d_model = 512, num_heads = 8, causal=False, dropout=0.0):\n","\n","    super(MultiHeadAttention, self).__init__()  # здесь все головы считаем паралелльно - поэтому attention пробегает и  по батчу и по числу голов\n","\n","    assert d_model % num_heads == 0 # проверим, что размерность головы - целое цисло\n","    depth = d_model // num_heads    # размерность каждой головы внимания  =>>  multi-headed_depth = depth / num_heads\n","                                    # заметим, что выходы голов конкатенируются, поэтому их размер в их число раз меньше.\n","                                    # поэтому размерность выхода должно совпасть в размерностью входа\n","\n","    self.w_query = tf.keras.layers.Dense(d_model)                            # dense для Query  (batch_size , seq_length, depth) \n","    self.split_reshape_query = tf.keras.layers.Reshape((-1,num_heads,depth)) # слой для решейпа query до  (batch_size , seq_length, num_heads, multi_headed_depth)  \n","    self.split_permute_query = tf.keras.layers.Permute((2,1,3))              # слой для перестановки размерностей для использования Attention (batch_size , num_heads, seq_length, multi_headed_depth) \n","\n","    self.w_value = tf.keras.layers.Dense(d_model)\n","    self.split_reshape_value = tf.keras.layers.Reshape((-1,num_heads,depth))\n","    self.split_permute_value = tf.keras.layers.Permute((2,1,3))\n","\n","    self.w_key = tf.keras.layers.Dense(d_model)\n","    self.split_reshape_key = tf.keras.layers.Reshape((-1,num_heads,depth))\n","    self.split_permute_key = tf.keras.layers.Permute((2,1,3))\n","\n","    self.attention = tf.keras.layers.Attention(causal=causal, dropout=dropout) # прописывает слой Attention\n","    self.join_permute_attention = tf.keras.layers.Permute((2,1,3))             # слой обратной перестановки размерностей\n","    self.join_reshape_attention = tf.keras.layers.Reshape((-1,d_model))        # слой обратного решейпа до размернсти модели\n","\n","    self.dense = tf.keras.layers.Dense(d_model)\n","\n","  def call(self, inputs, mask=None, training=None): # основная рабочая функция\n","\n","    q = inputs[0]                           # вытащим входной вектор Query\n","    v = inputs[1]                           # вытащим входной вектор Value\n","    k = inputs[2] if len(inputs) > 2 else v # вытащим входной вектор Key\n","\n","    query = self.w_query(q)                   # прогоним через dense\n","    query = self.split_reshape_query(query)   # решейпим\n","    query = self.split_permute_query(query)   # переставляем размерность\n","\n","    value = self.w_value(v)                 # прогоним через dense\n","    value = self.split_reshape_value(value) # решейпим\n","    value = self.split_permute_value(value) # переставляем размерность\n","\n","    key = self.w_key(k)               # прогоним через dense\n","    key = self.split_reshape_key(key) # решейпим\n","    key = self.split_permute_key(key) # переставляем размерность\n","\n","    if mask is not None: # применим маску если есть \n","\n","      if mask[0] is not None:\n","        mask[0] = tf.keras.layers.Reshape((-1,1))(mask[0])\n","        mask[0] = tf.keras.layers.Permute((2,1))(mask[0])\n","      \n","      if mask[1] is not None:\n","        mask[1] = tf.keras.layers.Reshape((-1,1))(mask[1])\n","        mask[1] = tf.keras.layers.Permute((2,1))(mask[1])\n","\n","    attention = self.attention([query, value, key], mask=mask) # вычисляем векторо внимания\n","    attention = self.join_permute_attention(attention)         # обратно перемешиваем размерности\n","    attention = self.join_reshape_attention(attention)         # решейпим до (batch_size , seq_length, depth) \n","\n","    x = self.dense(attention) # выходной dense\n","\n","    return x"],"execution_count":15,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"mAeeSGSOWXxE"},"source":["Определим класс кодера. Он содержит один слой \"многоголовое внимание\", дропаут, слой сложения - создает resudial связь, слой нормализации и Feed Forward блок - в dense слоя."]},{"cell_type":"code","metadata":{"id":"I2EGJ0VHr9Tg","executionInfo":{"status":"ok","timestamp":1641491317898,"user_tz":-180,"elapsed":39,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["class EncoderLayer(tf.keras.layers.Layer): \n","\n","  def __init__(self,  d_model = 512, num_heads = 8, dff = 2048, dropout = 0.0):\n","    super(EncoderLayer, self).__init__()\n","\n","    self.multi_head_attention =  MultiHeadAttention(d_model, num_heads)  # определим слой  MultiHeadAttention\n","    self.dropout_attention = tf.keras.layers.Dropout(dropout)            # добавим дропаут\n","    self.add_attention = tf.keras.layers.Add()                           # слой для получения resudial связи\n","    self.layer_norm_attention = tf.keras.layers.LayerNormalization(epsilon=1e-6)  # слой нормализации\n","\n","    self.dense1 = tf.keras.layers.Dense(dff, activation='relu')               # первый dense в Feed Forward\n","    self.dense2 = tf.keras.layers.Dense(d_model)                              # второй  dense в Feed Forward\n","    self.dropout_dense = tf.keras.layers.Dropout(dropout)                     # добавим дропаут\n","    self.add_dense = tf.keras.layers.Add()                                    # слой для получения resudial связи\n","    self.layer_norm_dense = tf.keras.layers.LayerNormalization(epsilon=1e-6)  # слой нормализации\n","\n","  def call(self, inputs, mask=None, training=None):\n","    \n","    # print(mask)\n","\n","    # входной вектор input размножим до 3  - это query, value, key и отдадим attenton, с маской если есть \n","    attention = self.multi_head_attention([inputs,inputs,inputs], mask = [mask,mask]) \n","    \n","    # уменьшим переобучение дроаутом\n","    attention = self.dropout_attention(attention, training = training) \n","    \n","    # сделаем resudial связь - добавим входной вектор\n","    x = self.add_attention([inputs , attention]) \n","    \n","    # далее нормализация в масштабах уровня\n","    x = self.layer_norm_attention(x)  \n","    # x = inputs\n","\n","    ## добавим Feed Forward  \n","    \n","    # проходим 1й dense с активашкой relu\n","    dense = self.dense1(x) \n","    \n","    # второй dense без активашки т.е. с линейной активационной функцией\n","    dense = self.dense2(dense)  \n","    \n","    # добавляем дропаут\n","    dense = self.dropout_dense(dense, training = training)  \n","    \n","    # еще одна resudial связь\n","    x = self.add_dense([x , dense])  \n","    \n","    # нормализация в масштабах уровня\n","    x = self.layer_norm_dense(x)  \n","\n","    return x"],"execution_count":16,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xru8wFSFafUj"},"source":["Определим класс слой декодера, который содержит один слой \"многоголовое внимание\", дропаут, слой сложения - создает resudial связь, слой нормализации и Feed Forward блок - в dense слоя:"]},{"cell_type":"code","metadata":{"id":"5Eyo1MWfsBPU","executionInfo":{"status":"ok","timestamp":1641491317900,"user_tz":-180,"elapsed":41,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["class DecoderLayer(tf.keras.layers.Layer):\n","\n","  def __init__(self,  d_model = 512, num_heads = 8, dff = 2048, dropout = 0.0):\n","\n","    super(DecoderLayer, self).__init__()\n","\n","    self.multi_head_attention1 =  MultiHeadAttention(d_model, num_heads, causal = True) # определим слой  MultiHeadAttention\n","    self.dropout_attention1 = tf.keras.layers.Dropout(dropout)                          # добавим дропаут\n","    self.add_attention1 = tf.keras.layers.Add()                                         # слой для получения resudial связи\n","    self.layer_norm_attention1 = tf.keras.layers.LayerNormalization(epsilon=1e-6)       # слой нормализации\n","\n","    self.multi_head_attention2 =  MultiHeadAttention(d_model, num_heads)                # определим слой  MultiHeadAttention \n","    self.dropout_attention2 = tf.keras.layers.Dropout(dropout)                          # добавим дропаут\n","    self.add_attention2 = tf.keras.layers.Add()                                         # слой для получения resudial связи\n","    self.layer_norm_attention2 = tf.keras.layers.LayerNormalization(epsilon=1e-6)       # слой нормализации\n","\n","\n","    self.dense1 = tf.keras.layers.Dense(dff, activation='relu')              # первый dense в Feed Forward\n","    self.dense2 = tf.keras.layers.Dense(d_model)                             # второй  dense в Feed Forward\n","    self.dropout_dense = tf.keras.layers.Dropout(dropout)                    # добавим дропаут\n","    self.add_dense = tf.keras.layers.Add()                                   # слой для получения resudial связи\n","    self.layer_norm_dense = tf.keras.layers.LayerNormalization(epsilon=1e-6) # слой нормализации\n","\n","  def call(self, inputs, mask=None, training=None):\n","    \n","    # print(mask)\n","    \n","    # подадим на multi-head attention  Query, Key, Value вектора - здесь это один и тотже вектор\n","    attention = self.multi_head_attention1([inputs[0],inputs[0],inputs[0]], mask = [mask[0],mask[0]])\n","    \n","    # пробежим дропаут\n","    attention = self.dropout_attention1(attention, training = training)\n","    \n","    # пробросим Resudial-связь\n","    x = self.add_attention1([inputs[0] , attention])\n","    \n","    # выполним нормализацию\n","    x = self.layer_norm_attention1(x)\n","    \n","    # второй multi-head attention. Подаем выход предыдущих слоев x и выход от энкодера, маску (если есть)\n","    attention = self.multi_head_attention2([x, inputs[1],inputs[1]], mask = [mask[0],mask[1]])\n","    \n","    # прогоняем через дропаут\n","    attention = self.dropout_attention2(attention, training = training)\n","    \n","    # пробросим Resudial-связь\n","    x = self.add_attention1([x , attention])\n","    \n","    # выполним нормализацию\n","    x = self.layer_norm_attention1(x)\n","\n","    ## Feed Forward\n","    \n","    # 1 -dense + relu\n","    dense = self.dense1(x)\n","\n","    # 2 dense +linear\n","    dense = self.dense2(dense)\n","\n","    # прогоняем через дропаут\n","    dense = self.dropout_dense(dense, training = training)\n","\n","    # пробросим Resudial-связь\n","    x = self.add_dense([x , dense])\n","\n","    # выполним нормализацию\n","    x = self.layer_norm_dense(x)\n","\n","    return x"],"execution_count":17,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"g6GY0fktccgh"},"source":["Создаем сам кодер из слоев, описанных ранее (embedding, позиционное кодирование, пачки кодеров):\n"]},{"cell_type":"code","metadata":{"id":"DSMPCIhfsD-C","executionInfo":{"status":"ok","timestamp":1641491317901,"user_tz":-180,"elapsed":41,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["class Encoder(tf.keras.layers.Layer):\n","\n","  def __init__(self, input_vocab_size, num_layers = 4, d_model = 512, num_heads = 8, dff = 2048, maximum_position_encoding = 10000, dropout = 0.0):\n","    \n","    super(Encoder, self).__init__()\n","\n","    self.d_model = d_model\n","\n","    self.embedding = tf.keras.layers.Embedding(input_vocab_size, d_model, mask_zero=True)                           # пропишем слой Embedding\n","    self.pos = positional_encoding(maximum_position_encoding, d_model)                                              # функция позиционного кодирования\n","    self.encoder_layers = [ EncoderLayer(d_model = d_model, num_heads = num_heads, dff = dff, dropout = dropout) for _ in range(num_layers)] # список Nx слоев кодера \n","    self.dropout = tf.keras.layers.Dropout(dropout)                                                                 # просто дропаут\n","\n","  def call(self, inputs, mask=None, training=None):\n","    \n","    # входной эмбеддинг  \n","    x = self.embedding(inputs) \n","    \n","    # позиционное кодирование\n","    x *= tf.math.sqrt(tf.cast(self.d_model, tf.float32))  #\n","    x += self.pos[: , :tf.shape(x)[1], :]\n","    \n","    # прогоняем через дроаут\n","    x = self.dropout(x, training=training)\n","\n","    # Encoder layer\n","\n","    # входной слой embedding+ Позиционное кодирование\n","    embedding_mask = self.embedding.compute_mask(inputs)\n","\n","    # прогоним через Nx слоев кодера\n","    for encoder_layer in self.encoder_layers: \n","      x = encoder_layer(x, mask = embedding_mask)\n","\n","    return x\n","\n","  # Закомментируйте код ниже, если хотите использовать masked_loss()\n","  def compute_mask(self, inputs, mask=None):\n","    return self.embedding.compute_mask(inputs)"],"execution_count":18,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"tWn5jlsVum7Y"},"source":["Создаем сам декодер из слоев, описанных выше (embedding, позиционное кодирование, пачки декодеров):"]},{"cell_type":"code","metadata":{"id":"AoyyU00JsPaH","executionInfo":{"status":"ok","timestamp":1641491317902,"user_tz":-180,"elapsed":40,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["class Decoder(tf.keras.layers.Layer):\n","\n","  def __init__(self, target_vocab_size, num_layers = 4, d_model = 512, num_heads = 8, dff = 2048, maximum_position_encoding = 10000, dropout = 0.0):\n","    \n","    super(Decoder, self).__init__()\n","\n","    self.d_model = d_model\n","\n","    self.embedding = tf.keras.layers.Embedding(target_vocab_size, d_model, mask_zero=True) # пропишем слой Embedding\n","    self.pos = positional_encoding(maximum_position_encoding, d_model)                     # функция позиционного кодирования\n","    self.decoder_layers = [ DecoderLayer(d_model = d_model, num_heads = num_heads, dff = dff, dropout = dropout)  for _ in range(num_layers)] # список Nx слоев декодера \n","    self.dropout = tf.keras.layers.Dropout(dropout)                                        # просто дропаут\n","\n","  def call(self, inputs, mask=None, training=None):\n","    \n","    # выполним переход в эмбеддинг\n","    x = self.embedding(inputs[0]) \n","    \n","    # позиционное кодирование\n","    x *= tf.math.sqrt(tf.cast(self.d_model, tf.float32))\n","    x += self.pos[: , :tf.shape(x)[1], :]\n","    \n","    # просто dropout\n","    x = self.dropout(x, training=training)\n","\n","    # Decoder layer\n","    \n","    # входной слой embedding + Позиционное кодирование\n","    embedding_mask = self.embedding.compute_mask(inputs[0])\n","\n","    # прогоним через Nx слоев декодера\n","    for decoder_layer in self.decoder_layers:\n","      x = decoder_layer([x,inputs[1]], mask = [embedding_mask, mask])\n","\n","    return x\n","\n","  # Закомментируйте код ниже, если хотите использовать masked_loss()\n","  def compute_mask(self, inputs, mask=None):\n","    return self.embedding.compute_mask(inputs[0])"],"execution_count":19,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"NZvy540-fE2C"},"source":["Соберем модель: 2 входных слоя, кодер, декодер, \n","выходной dense:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l2UU7F63sR2W","executionInfo":{"status":"ok","timestamp":1641491320285,"user_tz":-180,"elapsed":2422,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}},"outputId":"e025d236-a0d3-4dde-979b-ff088252311f"},"source":["num_layers = 4\n","d_model = 128\n","dff = 512\n","num_heads = 8\n","\n","dropout_rate = 0.1\n","\n","input_vocab_size = tokenizer_ru.vocab_size + 2\n","target_vocab_size = tokenizer_en.vocab_size + 2\n","\n","\n","input  = tf.keras.layers.Input(shape=(None,)) # входной слой для переводимой фразы\n","target = tf.keras.layers.Input(shape=(None,)) # вход для перевода\n","encoder = Encoder(input_vocab_size, num_layers = num_layers, d_model = d_model, num_heads = num_heads, dff = dff, dropout = dropout_rate) # весь кодер\n","decoder = Decoder(target_vocab_size, num_layers = num_layers, d_model = d_model, num_heads = num_heads, dff = dff, dropout = dropout_rate) #весь декодер\n","\n","# собираем модель \n","x = encoder(input)\n","x = decoder([target, x] , mask = encoder.compute_mask(input))\n","x = tf.keras.layers.Dense(target_vocab_size)(x)\n","\n","model = tf.keras.models.Model(inputs=[input, target], outputs=x)\n","model.summary()"],"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_1 (InputLayer)           [(None, None)]       0           []                               \n","                                                                                                  \n"," input_2 (InputLayer)           [(None, None)]       0           []                               \n","                                                                                                  \n"," encoder (Encoder)              (None, None, 128)    1840256     ['input_1[0][0]']                \n","                                                                                                  \n"," tf.math.not_equal (TFOpLambda)  (None, None)        0           ['input_1[0][0]']                \n","                                                                                                  \n"," decoder (Decoder)              (None, None, 128)    2112896     ['input_2[0][0]',                \n","                                                                  'encoder[0][0]',                \n","                                                                  'tf.math.not_equal[0][0]']      \n","                                                                                                  \n"," dense_64 (Dense)               (None, None, 8247)   1063863     ['decoder[0][0]']                \n","                                                                                                  \n","==================================================================================================\n","Total params: 5,017,015\n","Trainable params: 5,017,015\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n"]}]},{"cell_type":"markdown","metadata":{"id":"bNdbJ45Wfd2R"},"source":["Проверим работоспособность:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"IfBWHYgtsVK4","executionInfo":{"status":"ok","timestamp":1641491324370,"user_tz":-180,"elapsed":4092,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}},"outputId":"d07ea997-a1cd-4818-e237-f148d2e7a1c5"},"source":["ru_batch, en_batch = next(iter(val_dataset))\n","\n","plt.pcolormesh(model.predict([ru_batch,en_batch])[5],cmap='RdBu')\n","plt.colorbar()\n","\n","model.predict([ru_batch,en_batch]).shape"],"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(64, 40, 8247)"]},"metadata":{},"execution_count":21},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"p80e0Wu8sYE6","executionInfo":{"status":"ok","timestamp":1641491324372,"user_tz":-180,"elapsed":17,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["class CustomSchedule(tf.keras.optimizers.schedules.LearningRateSchedule):\n","    \n","  def __init__(self, d_model, warmup_steps=4000):\n","    super(CustomSchedule, self).__init__()\n","\n","    self.d_model = d_model\n","    self.d_model = tf.cast(self.d_model, tf.float32)\n","\n","    self.warmup_steps = warmup_steps\n","\n","  def __call__(self, step):\n","    arg1 = tf.math.rsqrt(step)\n","    arg2 = step * (self.warmup_steps ** -1.5)\n","    return tf.math.rsqrt(self.d_model) * tf.math.minimum(arg1, arg2)"],"execution_count":22,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0rfkHGFofm5I"},"source":["Задаем оптимайзер, функцию потерь, метрики и компилируем модель"]},{"cell_type":"code","metadata":{"id":"lEw7v5insgBS","executionInfo":{"status":"ok","timestamp":1641491324373,"user_tz":-180,"elapsed":17,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["# оптимайзер \n","optimizer = tf.keras.optimizers.Adam(CustomSchedule(d_model), beta_1=0.9, beta_2=0.98, \n","                                     epsilon=1e-9)\n","# функция потерь\n","loss = tf.keras.losses.SparseCategoricalCrossentropy(\n","    from_logits=True, reduction='none')\n","\n","def masked_loss(y_true, y_pred):\n","\n","  # считаем маску  \n","  mask = tf.math.logical_not(tf.math.equal(y_true, 0))\n","  _loss = loss(y_true, y_pred)\n","\n","  mask = tf.cast(mask, dtype=_loss.dtype)\n","\n","  # накинем маску на потери  \n","  _loss *= mask\n","\n","  return tf.reduce_sum(_loss)/tf.reduce_sum(mask)\n","\n","metrics = [loss, masked_loss, tf.keras.metrics.SparseCategoricalAccuracy()]\n","\n","model.compile(optimizer=optimizer, loss = loss, metrics = metrics) # masked_"],"execution_count":23,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"m3P24jwCfwgY"},"source":["Проверим число батчей для обучения и проверки:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1LqO3IhAsiUh","executionInfo":{"status":"ok","timestamp":1641491519759,"user_tz":-180,"elapsed":195403,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}},"outputId":"ca4395a1-6092-4838-fda5-f2235432ad2b"},"source":["num_batches = 0\n","for (batch, (_,_)) in enumerate(train_dataset):\n","  num_batches = batch\n","print(num_batches)\n","\n","val_batches = 0\n","for (batch, (_,_)) in enumerate(val_dataset):\n","  val_batches = batch\n","print(val_batches)"],"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["2624\n","60\n"]}]},{"cell_type":"markdown","metadata":{"id":"VoaphoWef-6l"},"source":["Напишем генератор. По номеру будем получать батч данных для обучения, запустим обучение:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RoWgLVK-skQN","outputId":"1dc2d6d1-4613-4141-d94a-f59a4f1d87f2","executionInfo":{"status":"ok","timestamp":1641496427998,"user_tz":-180,"elapsed":388828,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}}},"source":["def generator(data_set):\n","    \n","  while True:\n","    for ru_batch, en_batch in data_set:\n","      yield ( [ru_batch , en_batch[:, :-1] ] , en_batch[:, 1:] )\n","\n","history = model.fit(x = generator(train_dataset), validation_data = generator(val_dataset), epochs=2, steps_per_epoch = num_batches, validation_steps = val_batches)"],"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/2\n","2624/2624 [==============================] - 192s 73ms/step - loss: 1.0867 - sparse_categorical_crossentropy: 2.0718 - masked_loss: 2.1803 - sparse_categorical_accuracy: 0.5820 - val_loss: 1.1467 - val_sparse_categorical_crossentropy: 2.2386 - val_masked_loss: 2.3603 - val_sparse_categorical_accuracy: 0.5728\n","Epoch 2/2\n","2624/2624 [==============================] - 196s 75ms/step - loss: 1.0844 - sparse_categorical_crossentropy: 2.0658 - masked_loss: 2.1739 - sparse_categorical_accuracy: 0.5829 - val_loss: 1.1439 - val_sparse_categorical_crossentropy: 2.2331 - val_masked_loss: 2.3546 - val_sparse_categorical_accuracy: 0.5741\n"]}]},{"cell_type":"markdown","source":["Больше 58% догнать модель не удалось, дальше оно просто останавливается, запускал обучение несколько раз подряд. Возможно стоит посмотреть другие варианты параметров оптимизатора, или менять гиперпараметры. "],"metadata":{"id":"K6zkCJLSymLf"}},{"cell_type":"code","source":["    figsize = (10,10)\n","    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=figsize)\n","    fig.suptitle('График процесса обучения модели')\n","    ax1.plot(history.history['sparse_categorical_accuracy'], \n","               label='Доля верных ответов на обучающем наборе')\n","    ax1.plot(history.history['val_sparse_categorical_accuracy'], \n","               label='Доля верных ответов на проверочном наборе')\n","    ax1.xaxis.get_major_locator().set_params(integer=True)\n","    ax1.set_xlabel('Эпоха обучения')\n","    ax1.set_ylabel('Доля верных ответов')\n","    ax1.legend()\n","\n","    ax2.plot(history.history['sparse_categorical_crossentropy'], \n","               label='Ошибка на обучающем наборе')\n","    ax2.plot(history.history['val_sparse_categorical_crossentropy'], \n","               label='Ошибка на проверочном наборе')\n","    ax2.xaxis.get_major_locator().set_params(integer=True)\n","    ax2.set_xlabel('Эпоха обучения')\n","    ax2.set_ylabel('Ошибка')\n","    ax2.legend()\n","    plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":677},"id":"MZcd3-hCnwa7","executionInfo":{"status":"ok","timestamp":1641496427999,"user_tz":-180,"elapsed":24,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}},"outputId":"a757cfb7-b3c0-40da-9009-8ccbabd88162"},"execution_count":32,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x720 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"3EgdKVZLgby1"},"source":["## Prediction\n","На кодер подает исходную фразу, токен start на декодер - предиктим первое слово.\n","Выход декорера подаем на его вход и предиктим второе слово. \n","Второе слово дописываем к первому, и подаем на вход декодера\n","Процедура останавливается, как только токен stop получен\n","Переведенная фраза без токенов start/stop декодируется в текст.\n","\n","Проверим качество перевода. Выведем вместе предикченных перевод и эталонную фразу"]},{"cell_type":"code","metadata":{"id":"HLRzE3eqsqy9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1641496438716,"user_tz":-180,"elapsed":10735,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}},"outputId":"2ba3ff41-b2d2-4edd-b46f-a6cc12fd2973"},"source":["for i in range(10):\n","  translation = [tokenizer_en.vocab_size]\n","  for _ in range(40):\n","    predict = model.predict([ru_batch[i:i+1],np.asarray([translation])])\n","    translation.append(np.argmax(predict[-1,-1]))\n","    if translation[-1] == tokenizer_en.vocab_size + 1:\n","      break\n","\n","  real_translation = []\n","  for w in en_batch[:,1:][i].numpy():\n","    if w == tokenizer_en.vocab_size + 1:\n","      break\n","    real_translation.append(w)\n","\n","  untranslated = []\n","  for w in ru_batch[:,1:][i].numpy():\n","    if w == tokenizer_ru.vocab_size + 1:\n","      break\n","    untranslated.append(w)    \n","\n","  print(\" Текст для перевода:\")\n","  print(tokenizer_ru.decode(untranslated))\n","  print(\" Правильный перевод:\")\n","  print(tokenizer_en.decode(real_translation))\n","  print(\" Предсказание сети:\")\n","  print(tokenizer_en.decode(translation[1:-1]))\n","  print(\"\")"],"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":[" Текст для перевода:\n","( смех ) они - сильнейший противник .\n"," Правильный перевод:\n","( laughter ) they are the toughest opponents .\n"," Предсказание сети:\n","( laughter ) they are the big enemy .\n","\n"," Текст для перевода:\n","и если бы у них был доступ к их топливу - они бы это сделали .\n"," Правильный перевод:\n","had they had their fuel supplies , they would have done it .\n"," Предсказание сети:\n","and if they had access to their fuel supply , they would do it .\n","\n"," Текст для перевода:\n","( аплодисменты )\n"," Правильный перевод:\n","( applause )\n"," Предсказание сети:\n","( applause )\n","\n"," Текст для перевода:\n","первая вещь , которую следует принять к сведению , это то , что существуют части мира , которые в плане внимания являются тёмными пятнами .\n"," Правильный перевод:\n","the first thing you have to consider is that there are parts of the world that are dark spots in terms of attention .\n"," Предсказание сети:\n","the first thing to take to the fresh , is that there are parts of the world in terms of attention are dark spots .\n","\n"," Текст для перевода:\n","с этих разговоров все и началось .\n"," Правильный перевод:\n","and so we started talking about this .\n"," Предсказание сети:\n","with these conversations , everyone started to speak .\n","\n"," Текст для перевода:\n","я решила забыть всё то , чему меня учили о звуке .\n"," Правильный перевод:\n","and everything that i had been taught regarding sound , i decided to do away with and unlearn .\n"," Предсказание сети:\n","i decided to leave everything that i learned about sound .\n","\n"," Текст для перевода:\n","я смастерил это у себя дома два года назад , и с тех пор у нас не было никаких проблем со львами .\n"," Правильный перевод:\n","so i set it up in my home two years ago , and since then , we have never experienced any problem with lions .\n"," Предсказание сети:\n","i had been a little smartphone that was home two years ago , and since then , we had no problem with you .\n","\n"," Текст для перевода:\n","но что-то происходило на психологическом уровне , что отличало наш центр от школы .\n"," Правильный перевод:\n","but there was something psychological happening there that was just a little bit different .\n"," Предсказание сети:\n","but something happened on the psychological level , that we had a center of our school .\n","\n"," Текст для перевода:\n","я дошёл пешком до города ашлэнд , штат орегон , где предлагалась степень в области исследований окружающей среды .\n"," Правильный перевод:\n","i walked up to ashland , oregon , where they were offering an environmental studies degree .\n"," Предсказание сети:\n","i went to the city of the city of the state called oregon , where i proposed the degree of environmental research .\n","\n"," Текст для перевода:\n","почему мы не несём моральных обязательств перед камнями ?\n"," Правильный перевод:\n","why is it that we do n't have ethical obligations toward rocks ?\n"," Предсказание сети:\n","why do n't we have moral commitment to rocks ?\n","\n"]}]},{"cell_type":"markdown","source":["Сложноподчиненные предложения переводятся не очень, но отдельные фрагменты в предложениях более-менее совпадают. Также некоторые синтаксические конструкции заменяются другими без потери смысла, что тоже неплохо.\n","\n"],"metadata":{"id":"f0bN7Jt84amc"}}]}