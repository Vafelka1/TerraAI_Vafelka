{"cells":[{"cell_type":"code","source":["!pip install python-docx\n","\n"],"metadata":{"id":"1Z4jvLRWagzx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import os\n","import pandas as pd\n","import docx\n","from docx import Document\n","\n","# Function to log minimal information during processing\n","def log_minimal_info(current, total, column_name):\n","    print(f\"Processing column {current} of {total} - {column_name}\")\n","\n","# !!!!!!! Path to the original Excel file Сhange this to your actual file path !!!!!!!!\n","original_excel_path = '/content/ХЛТ_1 половина (исправлено)(отправлено).xlsx'\n","\n","\n","# Load the data into a DataFrame\n","df = pd.read_excel(original_excel_path)\n","\n","# Exclude the first column and get the remaining columns\n","all_columns = df.columns[1:]\n","\n","# Create a save path in the same directory as the original Excel file\n","directory = os.path.dirname(original_excel_path)\n","unique_categories_excel_path = os.path.join(directory, '2all_unique_categories.xlsx')\n","\n","# Initialize Excel writer\n","with pd.ExcelWriter(unique_categories_excel_path, engine='openpyxl') as writer:\n","    for index, col in enumerate(all_columns, start=1):\n","        # Log minimal info\n","        log_minimal_info(index, len(all_columns), col)\n","\n","        # Extract unique values\n","        unique_values = pd.DataFrame(df[col].unique(), columns=[col])\n","\n","        # Replace invalid characters in sheet name\n","        valid_sheet_name = col.replace(\"?\", \"_\").replace(\":\", \"_\").replace(\"*\", \"_\").replace(\"/\", \"_\")\n","\n","        # Save to Excel sheet (sheet name is limited to 31 characters)\n","        unique_values.to_excel(writer, sheet_name=valid_sheet_name[:31], index=False)\n","\n","# Initialize Document for docx\n","doc = Document()\n","\n","# After saving the Excel file, open it again to read the data\n","with pd.ExcelFile(unique_categories_excel_path) as xls:\n","    for sheet_name in xls.sheet_names:\n","        # Add sheet name to docx\n","        doc.add_heading(sheet_name, level=1)\n","\n","        # Read sheet into a DataFrame\n","        df_sheet = pd.read_excel(xls, sheet_name)\n","\n","        # Add unique categories to docx\n","        for idx, category in enumerate(df_sheet.iloc[:, 0], start=1):\n","            doc.add_paragraph(f\"{idx}. {category}\")\n","\n","# Save the docx file\n","docx_path = os.path.join(directory, 'unique_categories.docx')\n","doc.save(docx_path)\n","\n","print(f'Unique categories have been saved to: {unique_categories_excel_path}')\n","print(f'Unique categories in docx format have been saved to: {docx_path}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SLWw-AUXaJs_","executionInfo":{"status":"ok","timestamp":1699354561074,"user_tz":-180,"elapsed":60022,"user":{"displayName":"Vafelka","userId":"11276804272897708630"}},"outputId":"77ca0a3f-bb83-473c-a5b0-bce74bb99dd3"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Processing column 1 of 20 - Стадия\n","Processing column 2 of 20 - Гистология\n","Processing column 3 of 20 - Какая планируется линия\n","Processing column 4 of 20 - Противопоказания к ЛТ\n","Processing column 5 of 20 - ECOG\n","Processing column 6 of 20 - Возраст\n","Processing column 7 of 20 - Пол\n","Processing column 8 of 20 - Статус курения\n","Processing column 9 of 20 - Есть опухолевая нагрузка? (симптомная опухоль)\n","Processing column 10 of 20 - Молекулярный статус (только для неплоскоклеточного рака)\n","Processing column 11 of 20 - PD-L1 статус\n","Processing column 12 of 20 - Предпочтение пациента по ответу на терапию\n","Processing column 13 of 20 - Ответ эксперта (Лактионов)\n","Processing column 14 of 20 - Вариант ХТ\n","Processing column 15 of 20 - Альтернативный выбор ХТ (как компонента ХЛТ)\n","Processing column 16 of 20 - Поставьте галочку, если уверены на 100%\n","Processing column 17 of 20 - Если 75%\n","Processing column 18 of 20 - Если 50%\n","Processing column 19 of 20 - Альтернатива, если 50% - обязательно\n","Processing column 20 of 20 - Комментарий\n","Unique categories have been saved to: /content/2all_unique_categories.xlsx\n","Unique categories in docx format have been saved to: /content/unique_categories.docx\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"3MN5GIVeaJpi"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"1_dvbpyamBF6838eOe9ydkEjhDjuXIUrP","timestamp":1699354265900},{"file_id":"1tu4-MKCV7CJdI6hW-CUwWJMaDysG_XPi","timestamp":1632159390949}],"gpuType":"T4"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"accelerator":"GPU"},"nbformat":4,"nbformat_minor":0}