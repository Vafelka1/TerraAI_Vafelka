{"cells":[{"cell_type":"markdown","source":[],"metadata":{"id":"h3OEaxiSxDBQ"}},{"cell_type":"code","source":["icons = [16,24,32,48,256]\n","for i in icons:\n","  img = Image.open('Icon.jpg')\n","  img = img.resize((i,i))\n","  img.save(f'{i}x{i}.png')"],"metadata":{"id":"jSIHxQk9wqsW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["img"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"Hmt1RRaYwquy","executionInfo":{"status":"ok","timestamp":1698773162708,"user_tz":-180,"elapsed":10,"user":{"displayName":"Vafelka","userId":"11276804272897708630"}},"outputId":"16f933a5-27dc-443b-c507-470415291e78"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=16x16>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAIAAACQkWg2AAACwklEQVR4nD2SS0wTURiF/3vnlnZo7Uv6kmIppbaCSjAxYNUFARfGxBg1cWOMRhbEaGJM3Bi3JmJcu3DrjkRB4ytxpREfUXyAKIaCUJE2bWmhzHQ6M/fhosjZnJzkO7sPDU/0wv9QoVvA7pejHltEQpaKsZzXZhS6SrAVAa4zpF4ChOA04ervCZ0J2pOCIhCACKyb2W+F0YnCA5PXMCIbBwFCCN7XfLkndHalWPia/mSTGxk1dWq47J7U9kttrtTY/PUqXcXIgoYneik3DgbOp0JDP9OTgrNIOO5yugGAM5EvLmeyv9takmtk5uHcNQ4CM2EG5PiB8ODs/LSmqcnErpK5UFKXM+UfY1O3p8rP21qjf3LzrY4DXVuPU64TIVhX0zGjBqq23tmx++7roen8+DZnnCBptvQx5Ih3Bg+2hmPff33pjp6YWnmKrdjR6ty3Uso1eYMCGABYcINHDkS9e5JNqR2+/ffGr5T0xZpWbUR+n9xOGolLljw6VvyewIfFRxygv/1scEt7o9XFBRvPjHLOGZg2m2zq1GPbhhHCAkSukJWwpUaVyezLV3P3W7wJn6P53eJjDOCx+YLOqMVChAAJNWCdKZRrJmXVmtIdHnBbgwqtzOQ/aqYigFFOE76U0+av1hTSIK2bRVxlqwV9bqvTu5RdCDrbj3Zc5JwX1SUEEsKSVXIMJM9VNRVhwiWtoKWxADFVfB5paQNAjLHDOy+c7rqh1splNecg7iM7L0a8u1dK+UgwtlB5v2bk0K2JHiTEydidmPvQplRFZel3/rPD5k2EeutGqEbx/q/BVeMvQYA4sBeZ4VMWf8CeqB+aHGG37COStT51qjxbuFkyMgRZMQBgRCpmbiR9Zbr4hHJ9w8o6LeCvMjkye3W28pogKwCgTb25YAAsbN+bcPf55BhCUsXIza+9TVfe6FwlqKGO/QP791LZKSK34wAAAABJRU5ErkJggg==\n"},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":[],"metadata":{"id":"3I1ikuELwqxg"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17952,"status":"ok","timestamp":1693505573849,"user":{"displayName":"Vafelka","userId":"11276804272897708630"},"user_tz":-180},"id":"VcRFAyse4rdF","outputId":"161e8ab3-5d87-480d-d20f-7cee540007ce"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4xJVNgXeCHqC"},"outputs":[],"source":["#!rm -f -r ph_final"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"S1j6YwOWDMoC"},"outputs":[],"source":["!unzip -q '/content/drive/MyDrive/Стажировка/Рентген/ph_final.zip' -d '/content'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SrfY9rdQC1bK"},"outputs":[],"source":["from PIL import Image\n","import matplotlib.pyplot as plt\n","import cv2\n","import pandas as pd\n","import numpy as np\n","import os"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yDP4pJzAXm2y"},"outputs":[],"source":["arr = np.zeros((0,8), dtype=int)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1im7LYOAXD9D"},"outputs":[],"source":["columns = ('image_name', 'page_width', 'page_height', 'x', 'y', 'width', 'height', 'labels')\n","df = pd.DataFrame(arr,columns=columns)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"elapsed":224,"status":"ok","timestamp":1693505605537,"user":{"displayName":"Vafelka","userId":"11276804272897708630"},"user_tz":-180},"id":"cwAIkP_1-71H","outputId":"0bd7dc8d-58f0-4fa6-ec93-2c9efda41197"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [image_name, page_width, page_height, x, y, width, height, labels]\n","Index: []"],"text/html":["\n","  <div id=\"df-65c91b04-c03c-4120-b374-5e07881b6375\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>image_name</th>\n","      <th>page_width</th>\n","      <th>page_height</th>\n","      <th>x</th>\n","      <th>y</th>\n","      <th>width</th>\n","      <th>height</th>\n","      <th>labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-65c91b04-c03c-4120-b374-5e07881b6375')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-65c91b04-c03c-4120-b374-5e07881b6375 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-65c91b04-c03c-4120-b374-5e07881b6375');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}],"source":["df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eXJfq7MRfVTw"},"outputs":[],"source":["def xyxy_to_xywh(xyxy):\n","    \"\"\"\n","    Convert XYXY format (x,y top left and x,y bottom right) to XYWH format (x,y center point and width, height).\n","    :param xyxy: [X1, Y1, X2, Y2]\n","    :return: [X, Y, W, H]\n","    \"\"\"\n","    if np.array(xyxy).ndim > 1 or len(xyxy) > 4:\n","        raise ValueError('xyxy format: [x1, y1, x2, y2]')\n","    x_temp = (xyxy[0] + xyxy[2]) / 2\n","    y_temp = (xyxy[1] + xyxy[3]) / 2\n","    w_temp = abs(xyxy[0] - xyxy[2])\n","    h_temp = abs(xyxy[1] - xyxy[3])\n","    return np.array([int(x_temp), int(y_temp), int(w_temp), int(h_temp)])\n","\n","def xywh_to_xyxy(xywh):\n","    \"\"\"\n","    Convert XYWH format (x,y center point and width, height) to XYXY format (x,y top left and x,y bottom right).\n","    :param xywh: [X, Y, W, H]\n","    :return: [X1, Y1, X2, Y2]\n","    \"\"\"\n","    if np.array(xywh).ndim > 1 or len(xywh) > 4:\n","        raise ValueError('xywh format: [x1, y1, width, height]')\n","    x1 = xywh[0] - xywh[2] / 2\n","    y1 = xywh[1] - xywh[3] / 2\n","    x2 = xywh[0] + xywh[2] / 2\n","    y2 = xywh[1] + xywh[3] / 2\n","    return np.array([int(x1), int(y1), int(x2), int(y2)])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5226,"status":"ok","timestamp":1693505616061,"user":{"displayName":"Vafelka","userId":"11276804272897708630"},"user_tz":-180},"id":"6JTTZUmny4nW","outputId":"e7b47b0e-91ff-47d4-9846-8bb9cddd32a5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pybboxes\n","  Downloading pybboxes-0.1.6-py3-none-any.whl (24 kB)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from pybboxes) (1.23.5)\n","Installing collected packages: pybboxes\n","Successfully installed pybboxes-0.1.6\n"]}],"source":["!pip install pybboxes\n","import pybboxes as pbx\n","def yolo_to_voc(yolo_box,W=424,H=1280):\n","\n","    yolo_bbox = yolo_box\n","    W, H = W,H  # WxH of the image\n","    xmin, ymin, xmax, ymax = pbx.convert_bbox(yolo_bbox, from_type=\"yolo\", to_type=\"voc\", image_size=(W,H))\n","\n","    return (xmin, ymin, xmax, ymax)\n","\n","def voc_to_yolo(voc_box,W=424,H=1280):\n","\n","    yolo_bbox = voc_box\n","    W, H = W,H  # WxH of the image\n","    xmin, ymin, xmax, ymax = pbx.convert_bbox(voc_box, from_type=\"voc\", to_type=\"yolo\", image_size=(W,H))\n","\n","    return (xmin, ymin, xmax, ymax)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"w8TDPGaZYBR6"},"outputs":[],"source":["train_im='/content/ph_final/train/images'\n","train_lab='/content/ph_final/train/labels'\n","name_i_list = os.listdir(train_im)\n","name_l_list = os.listdir(train_lab)\n","\n","\n","#for i in range(6):\n","for i in range(len(name_l_list)):\n","  image = f'{train_im}/{name_i_list[i]}'\n","  label = f'{train_lab}/{name_l_list[i]}'\n","\n","  img_name = str(image.split('/')[-1])\n","  img = Image.open(image)\n","\n","  old_W,old_H = img.size\n","\n","  size=(424,1280)\n","  width,height=size\n","  img = img.resize(size)\n","  img.save(image)\n","\n","  new_label = 0\n","\n","  with open(label,'r') as f:\n","    text = f.readlines()\n","\n","    if len(text) == 0:\n","      continue\n","\n","\n","    for j in range(len(text)):\n","      new_str=text[j]\n","\n","      x = float(new_str[1:].split(' ')[1])\n","      y = float(new_str[1:].split(' ')[2])\n","      w = float(new_str[1:].split(' ')[3])\n","      h = float(new_str[1:].split(' ')[4])\n","\n","      yolo_box = (x,y,w,h)\n","      coord = yolo_to_voc(yolo_box,W=old_W,H=old_H)\n","      #\n","\n","      x_scale = 424 / old_W\n","      y_scale = 1280 / old_H\n","      #print(x_scale,y_scale)\n","\n","      x = int(np.round(coord[0] * x_scale))\n","      y = int(np.round(coord[1] * y_scale))\n","      xmax = int(np.round(coord[2] * x_scale))\n","      ymax = int(np.round(coord[3] * y_scale))\n","\n","      coord=(x,y,xmax,ymax)\n","\n","      ##\n","      new_coord = xyxy_to_xywh(coord)\n","\n","      x,y,w,h=new_coord\n","\n","      sr = pd.Series(data = {'image_name':img_name,'page_width':width,'page_height':height,'x':x,'y':y,'width':w,'height':h,'labels':new_label})\n","      df = df.append(sr.to_frame().T)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":519,"status":"ok","timestamp":1693505707554,"user":{"displayName":"Vafelka","userId":"11276804272897708630"},"user_tz":-180},"id":"71PIUM7KIMx8","outputId":"ef61761f-0c11-4b1b-8562-5b4916a30cc0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                          image_name page_width page_height  \\\n","0   14_8_png.rf.ab163b1875265dda8221ad49a14ddadf.jpg        424        1280   \n","0   14_8_png.rf.ab163b1875265dda8221ad49a14ddadf.jpg        424        1280   \n","0   14_8_png.rf.ab163b1875265dda8221ad49a14ddadf.jpg        424        1280   \n","0   14_8_png.rf.ab163b1875265dda8221ad49a14ddadf.jpg        424        1280   \n","0   14_8_png.rf.ab163b1875265dda8221ad49a14ddadf.jpg        424        1280   \n","..                                               ...        ...         ...   \n","0              2017-10-07T11-04-04_288_processed.jpg        424        1280   \n","0              2017-10-07T11-04-04_288_processed.jpg        424        1280   \n","0              2017-10-07T11-04-04_288_processed.jpg        424        1280   \n","0              2017-10-07T11-04-04_288_processed.jpg        424        1280   \n","0              2017-10-07T11-04-04_288_processed.jpg        424        1280   \n","\n","      x    y width height labels  \n","0    66  748    92     94      0  \n","0   288  752    53    100      0  \n","0   205  594    77     49      0  \n","0   130  571    15     45      0  \n","0   286  670    54     75      0  \n","..  ...  ...   ...    ...    ...  \n","0   159  212     8     37      0  \n","0   215  649    42     34      0  \n","0   273  722    29     34      0  \n","0   285  764    13     15      0  \n","0   152  732    48     93      0  \n","\n","[8263 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-d1be3e02-fa3d-4000-a657-0c04a15485a2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>image_name</th>\n","      <th>page_width</th>\n","      <th>page_height</th>\n","      <th>x</th>\n","      <th>y</th>\n","      <th>width</th>\n","      <th>height</th>\n","      <th>labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>14_8_png.rf.ab163b1875265dda8221ad49a14ddadf.jpg</td>\n","      <td>424</td>\n","      <td>1280</td>\n","      <td>66</td>\n","      <td>748</td>\n","      <td>92</td>\n","      <td>94</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>14_8_png.rf.ab163b1875265dda8221ad49a14ddadf.jpg</td>\n","      <td>424</td>\n","      <td>1280</td>\n","      <td>288</td>\n","      <td>752</td>\n","      <td>53</td>\n","      <td>100</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>14_8_png.rf.ab163b1875265dda8221ad49a14ddadf.jpg</td>\n","      <td>424</td>\n","      <td>1280</td>\n","      <td>205</td>\n","      <td>594</td>\n","      <td>77</td>\n","      <td>49</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>14_8_png.rf.ab163b1875265dda8221ad49a14ddadf.jpg</td>\n","      <td>424</td>\n","      <td>1280</td>\n","      <td>130</td>\n","      <td>571</td>\n","      <td>15</td>\n","      <td>45</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>14_8_png.rf.ab163b1875265dda8221ad49a14ddadf.jpg</td>\n","      <td>424</td>\n","      <td>1280</td>\n","      <td>286</td>\n","      <td>670</td>\n","      <td>54</td>\n","      <td>75</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-10-07T11-04-04_288_processed.jpg</td>\n","      <td>424</td>\n","      <td>1280</td>\n","      <td>159</td>\n","      <td>212</td>\n","      <td>8</td>\n","      <td>37</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-10-07T11-04-04_288_processed.jpg</td>\n","      <td>424</td>\n","      <td>1280</td>\n","      <td>215</td>\n","      <td>649</td>\n","      <td>42</td>\n","      <td>34</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-10-07T11-04-04_288_processed.jpg</td>\n","      <td>424</td>\n","      <td>1280</td>\n","      <td>273</td>\n","      <td>722</td>\n","      <td>29</td>\n","      <td>34</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-10-07T11-04-04_288_processed.jpg</td>\n","      <td>424</td>\n","      <td>1280</td>\n","      <td>285</td>\n","      <td>764</td>\n","      <td>13</td>\n","      <td>15</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>2017-10-07T11-04-04_288_processed.jpg</td>\n","      <td>424</td>\n","      <td>1280</td>\n","      <td>152</td>\n","      <td>732</td>\n","      <td>48</td>\n","      <td>93</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8263 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d1be3e02-fa3d-4000-a657-0c04a15485a2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d1be3e02-fa3d-4000-a657-0c04a15485a2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d1be3e02-fa3d-4000-a657-0c04a15485a2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d6f79623-3eba-4447-8d4b-3a576f812382\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d6f79623-3eba-4447-8d4b-3a576f812382')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d6f79623-3eba-4447-8d4b-3a576f812382 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}],"source":["df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6nCSCnvtIxOW"},"outputs":[],"source":["df.to_csv('/content/drive/MyDrive/Стажировка/Рентген/transformer_labels.csv', index=False)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":798,"status":"ok","timestamp":1693506257193,"user":{"displayName":"Vafelka","userId":"11276804272897708630"},"user_tz":-180},"id":"rwCLr9kLLZK_","outputId":"34ceeede-64f7-49a5-ac1f-46041b959b06"},"outputs":[{"output_type":"stream","name":"stdout","text":["(276, 345, 299, 390)\n"]}],"source":["import matplotlib.pyplot as plt\n","import matplotlib.patches as patches\n","from PIL import Image\n","import random\n","\n","new_df = df.reset_index()\n","\n","from PIL import ImageDraw\n","\n","i = random.randint(0, df.shape[0])\n","im_name = new_df.loc[i,'image_name']\n","im_name = f'/content/ph_final/train/images/{im_name}'\n","x=new_df.loc[i,'x']\n","y=new_df.loc[i,'y']\n","w=new_df.loc[i,'width']\n","h=new_df.loc[i,'height']\n","H=new_df.loc[i,'page_height']\n","\n","\n","x1,y1,x2,y2=xywh_to_xyxy((x,y,w,h))\n","yy = (x1,y1,x2,y2)\n","print(yy)\n","\n","im = Image.open(im_name)\n","draw = ImageDraw.Draw(im)\n","draw.rectangle(yy,outline=(225,0,0), width=2)\n","im.show()\n","im.save('1.png')\n","\n","\n","# Create figure and axes\n","#fig, ax = plt.subplots()\n","\n","# Display the image\n","#ax.imshow(im)\n","\n","# Create a Rectangle patch\n","#rect = patches.Rectangle((xmin, aY), w, h, linewidth=1, edgecolor='r', facecolor='none')\n","\n","# Add the patch to the Axes\n","#ax.add_patch(rect)\n","\n","#plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":197,"status":"ok","timestamp":1692477477225,"user":{"displayName":"Vafelka","userId":"11276804272897708630"},"user_tz":-180},"id":"HC6FZ6iW8Zxi","outputId":"9cb16085-7387-4eb5-e9a2-f42924146184"},"outputs":[{"data":{"text/plain":["index                                                         0\n","image_name     65_2_png.rf.0490055c20e3c281d197d326d421ecfa.jpg\n","page_width                                                  841\n","page_height                                                2048\n","x                                                            85\n","y                                                           925\n","width                                                        36\n","height                                                      142\n","labels                                                        0\n","Name: 1697, dtype: object"]},"execution_count":33,"metadata":{},"output_type":"execute_result"}],"source":["new_df.loc[i]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ruu9pq3cgc38"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NVUXR_PrihD1"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1108,"status":"ok","timestamp":1693505771169,"user":{"displayName":"Vafelka","userId":"11276804272897708630"},"user_tz":-180},"id":"TKAu842vgc6O","outputId":"bcab678a-f300-41ee-9c59-30913591e25c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'Transform_detector'...\n","remote: Enumerating objects: 47, done.\u001b[K\n","remote: Counting objects: 100% (47/47), done.\u001b[K\n","remote: Compressing objects: 100% (43/43), done.\u001b[K\n","remote: Total 47 (delta 11), reused 32 (delta 2), pack-reused 0\u001b[K\n","Receiving objects: 100% (47/47), 5.30 MiB | 23.37 MiB/s, done.\n","Resolving deltas: 100% (11/11), done.\n"]}],"source":["!git clone -b Vafelka1-new_train https://github.com/Vafelka1/Transform_detector"]},{"cell_type":"code","source":["import json\n","with open('Transform_detector/config.json') as f:\n","    data = json.load(f)\n","data['max_steps'] = 2000\n","with open('Transform_detector/config.json', 'w') as f:\n","    json.dump(data, f, ensure_ascii=False, indent=4)"],"metadata":{"id":"jnJf9tWY8kP5"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nRSOqBncih3W"},"outputs":[],"source":["!pip install -r /content/Transform_detector/requirements.txt\n","!pip install torchtext==0.13.0"]},{"cell_type":"code","source":["#import pandas as pd\n","#df = pd.read_csv('/content/drive/MyDrive/Стажировка/Рентген/transformer_labels.csv')\n","#df = df[4000:]\n","#df.to_csv('/content/drive/MyDrive/Стажировка/Рентген/transformer_labels_new.csv', index=False)"],"metadata":{"id":"JIq7Swal_enW"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8048,"status":"ok","timestamp":1693505956326,"user":{"displayName":"Vafelka","userId":"11276804272897708630"},"user_tz":-180},"id":"SNrUhktmhtdJ","outputId":"b416ae7e-0f56-41a8-8f46-01c3281c9ad2"},"outputs":[{"output_type":"stream","name":"stdout","text":["...TRAIN...\n","Starting...\n","1/3 The categories have been completed.\n","2/3 The images have been completed.\n","3/3 Annotations have been completed.\n","Done.\n"]}],"source":["!python /content/Transform_detector/src/data_preparation.py -c /content/drive/MyDrive/Стажировка/Рентген/transformer_labels.csv -i True"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1909,"status":"ok","timestamp":1693505958231,"user":{"displayName":"Vafelka","userId":"11276804272897708630"},"user_tz":-180},"id":"csXDnKhL51bT","outputId":"bd39d87d-2e98-402e-9664-5a07e8c8790e"},"outputs":[{"output_type":"stream","name":"stdout","text":["...TEST...\n","Starting...\n","1/3 The categories have been completed.\n","2/3 The images have been completed.\n","3/3 Annotations have been completed.\n","Done.\n"]}],"source":["!python /content/Transform_detector/src/data_preparation.py -c /content/drive/MyDrive/Стажировка/Рентген/transformer_test_labels.csv -i False"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hQudln2ViKWP","executionInfo":{"status":"ok","timestamp":1693507861043,"user_tz":-180,"elapsed":1587827,"user":{"displayName":"Vafelka","userId":"11276804272897708630"}},"outputId":"3b28cfe6-67af-41b6-cde8-920b620f0c4a"},"outputs":[{"output_type":"stream","name":"stdout","text":["\rDownloading:   0% 0.00/274 [00:00<?, ?B/s]\rDownloading: 100% 274/274 [00:00<00:00, 1.28MB/s]\n","loading annotations into memory...\n","Done (t=0.03s)\n","creating index...\n","index created!\n","loading annotations into memory...\n","Done (t=0.01s)\n","creating index...\n","index created!\n","Downloading: 100% 4.48k/4.48k [00:00<00:00, 18.8MB/s]\n","Downloading: 100% 159M/159M [00:02<00:00, 78.0MB/s]\n","Downloading: \"https://github.com/rwightman/pytorch-image-models/releases/download/v0.1-rsb-weights/resnet50_a1_0-14fe96d1.pth\" to /root/.cache/torch/hub/checkpoints/resnet50_a1_0-14fe96d1.pth\n","Some weights of DetrForObjectDetection were not initialized from the model checkpoint at facebook/detr-resnet-50 and are newly initialized because the shapes did not match:\n","- class_labels_classifier.weight: found shape torch.Size([92, 256]) in the checkpoint and torch.Size([2, 256]) in the model instantiated\n","- class_labels_classifier.bias: found shape torch.Size([92]) in the checkpoint and torch.Size([2]) in the model instantiated\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n","GPU available: True, used: True\n","TPU available: False, using: 0 TPU cores\n","IPU available: False, using: 0 IPUs\n","HPU available: False, using: 0 HPUs\n","Missing logger folder: /content/lightning_logs\n","LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]\n","\n","  | Name  | Type                   | Params\n","-------------------------------------------------\n","0 | model | DetrForObjectDetection | 41.5 M\n","-------------------------------------------------\n","41.3 M    Trainable params\n","222 K     Non-trainable params\n","41.5 M    Total params\n","166.037   Total estimated model params size (MB)\n","Sanity Checking DataLoader 0:   0% 0/2 [00:00<?, ?it/s]/usr/local/lib/python3.10/dist-packages/pytorch_lightning/utilities/data.py:72: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 2. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.\n","  warning_cache.warn(\n","Epoch 0:  10% 40/420 [00:34<05:28,  1.16it/s, loss=3.03, v_num=0]2023-08-31 18:25:29.000753: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\n","To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\n","2023-08-31 18:25:30.812270: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT\n","Epoch 0:  67% 280/420 [04:12<02:06,  1.11it/s, loss=2.78, v_num=0]\n","Validation: 0it [00:00, ?it/s]\u001b[A\n","Validation:   0% 0/124 [00:00<?, ?it/s]\u001b[A\n","Epoch 0:  71% 300/420 [04:28<01:47,  1.12it/s, loss=2.78, v_num=0]\n","Validation DataLoader 0:  16% 20/124 [00:08<00:43,  2.39it/s]\u001b[A\n","Epoch 0:  76% 320/420 [04:37<01:26,  1.15it/s, loss=2.78, v_num=0]\n","Validation DataLoader 0:  32% 40/124 [00:19<00:41,  2.02it/s]\u001b[A\n","Epoch 0:  81% 340/420 [04:47<01:07,  1.18it/s, loss=2.78, v_num=0]\n","Validation DataLoader 0:  48% 60/124 [00:28<00:30,  2.11it/s]\u001b[A\n","Epoch 0:  86% 360/420 [04:57<00:49,  1.21it/s, loss=2.78, v_num=0]\n","Validation DataLoader 0:  65% 80/124 [00:38<00:21,  2.03it/s]\u001b[A\n","Epoch 0:  90% 380/420 [05:07<00:32,  1.24it/s, loss=2.78, v_num=0]\n","Validation DataLoader 0:  81% 100/124 [00:48<00:11,  2.07it/s]\u001b[A\n","Epoch 0:  95% 400/420 [05:17<00:15,  1.26it/s, loss=2.78, v_num=0]\n","Validation DataLoader 0:  97% 120/124 [00:59<00:02,  1.95it/s]\u001b[A\n","Validation DataLoader 0:  97% 120/124 [00:59<00:02,  1.95it/s]\u001b[A/usr/local/lib/python3.10/dist-packages/pytorch_lightning/utilities/data.py:72: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 1. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.\n","  warning_cache.warn(\n","\n","Validation DataLoader 0: 100% 124/124 [01:00<00:00,  1.99it/s]\u001b[A\n","Epoch 0: 100% 420/420 [05:27<00:00,  1.28it/s, loss=2.91, v_num=0]\n","Epoch 1:  67% 280/420 [04:09<02:04,  1.12it/s, loss=2.7, v_num=0] \n","Validation: 0it [00:00, ?it/s]\u001b[A\n","Validation:   0% 0/124 [00:00<?, ?it/s]\u001b[A\n","Epoch 1:  71% 300/420 [04:25<01:46,  1.13it/s, loss=2.7, v_num=0]\n","Validation DataLoader 0:  16% 20/124 [00:08<00:44,  2.33it/s]\u001b[A\n","Epoch 1:  76% 320/420 [04:33<01:25,  1.17it/s, loss=2.7, v_num=0]\n","Validation DataLoader 0:  32% 40/124 [00:19<00:42,  1.99it/s]\u001b[A\n","Epoch 1:  81% 340/420 [04:45<01:07,  1.19it/s, loss=2.7, v_num=0]\n","Validation DataLoader 0:  48% 60/124 [00:30<00:32,  1.94it/s]\u001b[A\n","Epoch 1:  86% 360/420 [04:55<00:49,  1.22it/s, loss=2.7, v_num=0]\n","Validation DataLoader 0:  65% 80/124 [00:40<00:22,  1.92it/s]\u001b[A\n","Epoch 1:  90% 380/420 [05:05<00:32,  1.24it/s, loss=2.7, v_num=0]\n","Validation DataLoader 0:  81% 100/124 [00:50<00:11,  2.00it/s]\u001b[A\n","Epoch 1:  95% 400/420 [05:15<00:15,  1.27it/s, loss=2.7, v_num=0]\n","Validation DataLoader 0:  97% 120/124 [01:01<00:02,  1.90it/s]\u001b[A\n","Validation DataLoader 0:  97% 120/124 [01:01<00:02,  1.90it/s]\u001b[A\n","Validation DataLoader 0: 100% 124/124 [01:03<00:00,  1.93it/s]\u001b[A\n","Epoch 1: 100% 420/420 [05:26<00:00,  1.29it/s, loss=2.73, v_num=0]\n","Epoch 2:  67% 280/420 [04:07<02:03,  1.13it/s, loss=2.85, v_num=0]\n","Validation: 0it [00:00, ?it/s]\u001b[A\n","Validation:   0% 0/124 [00:00<?, ?it/s]\u001b[A\n","Epoch 2:  71% 300/420 [04:23<01:45,  1.14it/s, loss=2.85, v_num=0]\n","Validation DataLoader 0:  16% 20/124 [00:10<00:53,  1.93it/s]\u001b[A\n","Epoch 2:  76% 320/420 [04:33<01:25,  1.17it/s, loss=2.85, v_num=0]\n","Validation DataLoader 0:  32% 40/124 [00:19<00:41,  2.02it/s]\u001b[A\n","Epoch 2:  81% 340/420 [04:43<01:06,  1.20it/s, loss=2.85, v_num=0]\n","Validation DataLoader 0:  48% 60/124 [00:30<00:32,  1.98it/s]\u001b[A\n","Epoch 2:  86% 360/420 [04:53<00:48,  1.23it/s, loss=2.85, v_num=0]\n","Validation DataLoader 0:  65% 80/124 [00:39<00:21,  2.05it/s]\u001b[A\n","Epoch 2:  90% 380/420 [05:03<00:31,  1.25it/s, loss=2.85, v_num=0]\n","Validation DataLoader 0:  81% 100/124 [00:50<00:12,  1.95it/s]\u001b[A\n","Epoch 2:  95% 400/420 [05:14<00:15,  1.27it/s, loss=2.85, v_num=0]\n","Validation DataLoader 0:  97% 120/124 [01:00<00:02,  1.98it/s]\u001b[A\n","Validation DataLoader 0:  97% 120/124 [01:00<00:02,  1.98it/s]\u001b[A\n","Validation DataLoader 0: 100% 124/124 [01:02<00:00,  1.98it/s]\u001b[A\n","Epoch 2: 100% 420/420 [05:23<00:00,  1.30it/s, loss=2.76, v_num=0]\n","Epoch 3:  67% 280/420 [04:04<02:02,  1.15it/s, loss=2.71, v_num=0]\n","Validation: 0it [00:00, ?it/s]\u001b[A\n","Validation:   0% 0/124 [00:00<?, ?it/s]\u001b[A\n","Epoch 3:  71% 300/420 [04:19<01:43,  1.15it/s, loss=2.71, v_num=0]\n","Validation DataLoader 0:  16% 20/124 [00:09<00:49,  2.08it/s]\u001b[A\n","Epoch 3:  76% 320/420 [04:29<01:24,  1.19it/s, loss=2.71, v_num=0]\n","Validation DataLoader 0:  32% 40/124 [00:18<00:39,  2.11it/s]\u001b[A\n","Epoch 3:  81% 340/420 [04:38<01:05,  1.22it/s, loss=2.71, v_num=0]\n","Validation DataLoader 0:  48% 60/124 [00:29<00:31,  2.05it/s]\u001b[A\n","Epoch 3:  86% 360/420 [04:49<00:48,  1.24it/s, loss=2.71, v_num=0]\n","Validation DataLoader 0:  65% 80/124 [00:38<00:21,  2.05it/s]\u001b[A\n","Epoch 3:  90% 380/420 [04:59<00:31,  1.27it/s, loss=2.71, v_num=0]\n","Validation DataLoader 0:  81% 100/124 [00:51<00:12,  1.87it/s]\u001b[A\n","Epoch 3:  95% 400/420 [05:11<00:15,  1.28it/s, loss=2.71, v_num=0]\n","Validation DataLoader 0:  97% 120/124 [01:00<00:02,  1.96it/s]\u001b[A\n","Validation DataLoader 0:  97% 120/124 [01:00<00:02,  1.96it/s]\u001b[A\n","Validation DataLoader 0: 100% 124/124 [01:02<00:00,  1.99it/s]\u001b[A\n","Epoch 3: 100% 420/420 [05:20<00:00,  1.31it/s, loss=2.7, v_num=0] \n","Epoch 4:  48% 200/420 [02:55<03:13,  1.14it/s, loss=2.67, v_num=0]/usr/local/lib/python3.10/dist-packages/pytorch_lightning/trainer/trainer.py:726: UserWarning: Detected KeyboardInterrupt, attempting graceful shutdown...\n","  rank_zero_warn(\"Detected KeyboardInterrupt, attempting graceful shutdown...\")\n","Running evaluation...\n","\n","  0% 0/124 [00:00<?, ?it/s]\u001b[A\n","  1% 1/124 [00:00<01:23,  1.47it/s]\u001b[A\n","  2% 2/124 [00:01<01:17,  1.56it/s]\u001b[A\n","  2% 3/124 [00:01<01:13,  1.65it/s]\u001b[A\n","  3% 4/124 [00:02<01:11,  1.68it/s]\u001b[A\n","  4% 5/124 [00:03<01:09,  1.71it/s]\u001b[A\n","  5% 6/124 [00:03<01:09,  1.70it/s]\u001b[A\n","  6% 7/124 [00:04<01:13,  1.60it/s]\u001b[A\n","  6% 8/124 [00:04<01:15,  1.54it/s]\u001b[A\n","  7% 9/124 [00:05<01:14,  1.55it/s]\u001b[A\n","  8% 10/124 [00:06<01:15,  1.50it/s]\u001b[A\n","  9% 11/124 [00:07<01:16,  1.47it/s]\u001b[A\n"," 10% 12/124 [00:07<01:13,  1.52it/s]\u001b[A\n"," 10% 13/124 [00:08<01:11,  1.54it/s]\u001b[A\n"," 11% 14/124 [00:08<01:11,  1.54it/s]\u001b[A\n"," 12% 15/124 [00:09<01:08,  1.58it/s]\u001b[A\n"," 13% 16/124 [00:10<01:09,  1.55it/s]\u001b[A\n"," 14% 17/124 [00:10<01:06,  1.61it/s]\u001b[A\n"," 15% 18/124 [00:11<01:05,  1.62it/s]\u001b[A\n"," 15% 19/124 [00:11<01:03,  1.66it/s]\u001b[A\n"," 16% 20/124 [00:12<01:02,  1.66it/s]\u001b[A\n"," 17% 21/124 [00:13<01:02,  1.64it/s]\u001b[A\n"," 18% 22/124 [00:13<01:02,  1.64it/s]\u001b[A\n"," 19% 23/124 [00:14<01:00,  1.68it/s]\u001b[A\n"," 19% 24/124 [00:14<00:57,  1.73it/s]\u001b[A\n"," 20% 25/124 [00:15<00:53,  1.84it/s]\u001b[A\n"," 21% 26/124 [00:15<00:51,  1.92it/s]\u001b[A\n"," 22% 27/124 [00:16<00:48,  2.01it/s]\u001b[A\n"," 23% 28/124 [00:16<00:46,  2.05it/s]\u001b[A\n"," 23% 29/124 [00:17<00:51,  1.83it/s]\u001b[A\n"," 24% 30/124 [00:17<00:52,  1.80it/s]\u001b[A\n"," 25% 31/124 [00:18<00:52,  1.77it/s]\u001b[A\n"," 26% 32/124 [00:19<00:52,  1.76it/s]\u001b[A\n"," 27% 33/124 [00:19<00:51,  1.76it/s]\u001b[A\n"," 27% 34/124 [00:20<00:52,  1.71it/s]\u001b[A\n"," 28% 35/124 [00:20<00:53,  1.67it/s]\u001b[A\n"," 29% 36/124 [00:21<00:51,  1.70it/s]\u001b[A\n"," 30% 37/124 [00:22<00:52,  1.66it/s]\u001b[A\n"," 31% 38/124 [00:22<00:53,  1.60it/s]\u001b[A\n"," 31% 39/124 [00:23<00:53,  1.59it/s]\u001b[A\n"," 32% 40/124 [00:24<00:56,  1.49it/s]\u001b[A\n"," 33% 41/124 [00:24<00:53,  1.56it/s]\u001b[A\n"," 34% 42/124 [00:25<00:50,  1.63it/s]\u001b[A\n"," 35% 43/124 [00:25<00:48,  1.67it/s]\u001b[A\n"," 35% 44/124 [00:26<00:47,  1.67it/s]\u001b[A\n"," 36% 45/124 [00:27<00:45,  1.72it/s]\u001b[A\n"," 37% 46/124 [00:27<00:42,  1.83it/s]\u001b[A\n"," 38% 47/124 [00:28<00:40,  1.91it/s]\u001b[A\n"," 39% 48/124 [00:28<00:37,  2.04it/s]\u001b[A\n"," 40% 49/124 [00:28<00:36,  2.04it/s]\u001b[A\n"," 40% 50/124 [00:29<00:34,  2.13it/s]\u001b[A\n"," 41% 51/124 [00:29<00:33,  2.15it/s]\u001b[A\n"," 42% 52/124 [00:30<00:32,  2.21it/s]\u001b[A\n"," 43% 53/124 [00:30<00:32,  2.18it/s]\u001b[A\n"," 44% 54/124 [00:31<00:31,  2.22it/s]\u001b[A\n"," 44% 55/124 [00:31<00:31,  2.17it/s]\u001b[A\n"," 45% 56/124 [00:32<00:31,  2.15it/s]\u001b[A\n"," 46% 57/124 [00:32<00:32,  2.06it/s]\u001b[A\n"," 47% 58/124 [00:33<00:31,  2.12it/s]\u001b[A\n"," 48% 59/124 [00:33<00:30,  2.10it/s]\u001b[A\n"," 48% 60/124 [00:33<00:29,  2.16it/s]\u001b[A\n"," 49% 61/124 [00:34<00:29,  2.16it/s]\u001b[A\n"," 50% 62/124 [00:34<00:28,  2.19it/s]\u001b[A\n"," 51% 63/124 [00:35<00:28,  2.17it/s]\u001b[A\n"," 52% 64/124 [00:35<00:27,  2.15it/s]\u001b[A\n"," 52% 65/124 [00:36<00:26,  2.23it/s]\u001b[A\n"," 53% 66/124 [00:36<00:26,  2.21it/s]\u001b[A\n"," 54% 67/124 [00:37<00:27,  2.05it/s]\u001b[A\n"," 55% 68/124 [00:37<00:29,  1.91it/s]\u001b[A\n"," 56% 69/124 [00:38<00:29,  1.87it/s]\u001b[A\n"," 56% 70/124 [00:39<00:31,  1.72it/s]\u001b[A\n"," 57% 71/124 [00:39<00:31,  1.69it/s]\u001b[A\n"," 58% 72/124 [00:40<00:31,  1.66it/s]\u001b[A\n"," 59% 73/124 [00:40<00:30,  1.67it/s]\u001b[A\n"," 60% 74/124 [00:41<00:29,  1.69it/s]\u001b[A\n"," 60% 75/124 [00:42<00:28,  1.69it/s]\u001b[A\n"," 61% 76/124 [00:42<00:28,  1.68it/s]\u001b[A\n"," 62% 77/124 [00:43<00:28,  1.65it/s]\u001b[A\n"," 63% 78/124 [00:43<00:27,  1.65it/s]\u001b[A\n"," 64% 79/124 [00:44<00:28,  1.58it/s]\u001b[A\n"," 65% 80/124 [00:45<00:26,  1.64it/s]\u001b[A\n"," 65% 81/124 [00:45<00:25,  1.66it/s]\u001b[A\n"," 66% 82/124 [00:46<00:25,  1.67it/s]\u001b[A\n"," 67% 83/124 [00:46<00:23,  1.77it/s]\u001b[A\n"," 68% 84/124 [00:47<00:21,  1.88it/s]\u001b[A\n"," 69% 85/124 [00:47<00:20,  1.93it/s]\u001b[A\n"," 69% 86/124 [00:48<00:19,  2.00it/s]\u001b[A\n"," 70% 87/124 [00:48<00:18,  2.01it/s]\u001b[A\n"," 71% 88/124 [00:49<00:17,  2.05it/s]\u001b[A\n"," 72% 89/124 [00:49<00:18,  1.94it/s]\u001b[A\n"," 73% 90/124 [00:50<00:16,  2.02it/s]\u001b[A\n"," 73% 91/124 [00:50<00:16,  2.06it/s]\u001b[A\n"," 74% 92/124 [00:51<00:15,  2.05it/s]\u001b[A\n"," 75% 93/124 [00:51<00:14,  2.12it/s]\u001b[A\n"," 76% 94/124 [00:52<00:14,  2.11it/s]\u001b[A\n"," 77% 95/124 [00:52<00:13,  2.15it/s]\u001b[A\n"," 77% 96/124 [00:53<00:13,  2.10it/s]\u001b[A\n"," 78% 97/124 [00:53<00:12,  2.13it/s]\u001b[A\n"," 79% 98/124 [00:53<00:11,  2.17it/s]\u001b[A\n"," 80% 99/124 [00:54<00:11,  2.12it/s]\u001b[A\n"," 81% 100/124 [00:54<00:11,  2.13it/s]\u001b[A\n"," 81% 101/124 [00:55<00:10,  2.10it/s]\u001b[A\n"," 82% 102/124 [00:55<00:10,  2.19it/s]\u001b[A\n"," 83% 103/124 [00:56<00:09,  2.16it/s]\u001b[A\n"," 84% 104/124 [00:56<00:10,  1.98it/s]\u001b[A\n"," 85% 105/124 [00:57<00:10,  1.89it/s]\u001b[A\n"," 85% 106/124 [00:58<00:10,  1.77it/s]\u001b[A\n"," 86% 107/124 [00:58<00:09,  1.76it/s]\u001b[A\n"," 87% 108/124 [00:59<00:09,  1.73it/s]\u001b[A\n"," 88% 109/124 [00:59<00:08,  1.68it/s]\u001b[A\n"," 89% 110/124 [01:00<00:09,  1.42it/s]\u001b[A\n"," 90% 111/124 [01:01<00:08,  1.53it/s]\u001b[A\n"," 90% 112/124 [01:02<00:07,  1.60it/s]\u001b[A\n"," 91% 113/124 [01:02<00:06,  1.62it/s]\u001b[A\n"," 92% 114/124 [01:03<00:06,  1.57it/s]\u001b[A\n"," 93% 115/124 [01:04<00:06,  1.47it/s]\u001b[A\n"," 94% 116/124 [01:04<00:05,  1.55it/s]\u001b[A\n"," 94% 117/124 [01:05<00:04,  1.64it/s]\u001b[A\n"," 95% 118/124 [01:05<00:03,  1.65it/s]\u001b[A\n"," 96% 119/124 [01:06<00:02,  1.76it/s]\u001b[A\n"," 97% 120/124 [01:06<00:02,  1.86it/s]\u001b[A\n"," 98% 121/124 [01:07<00:01,  1.93it/s]\u001b[A\n"," 98% 122/124 [01:07<00:01,  1.98it/s]\u001b[A\n"," 99% 123/124 [01:08<00:00,  2.07it/s]\u001b[A\n","100% 124/124 [01:08<00:00,  1.81it/s]\n","Accumulating evaluation results...\n","DONE (t=0.25s).\n","IoU metric: bbox\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n"," Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.003\n"," Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.001\n"," Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.001\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.006\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.037\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.025\n"," Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.075\n"]}],"source":["!python /content/Transform_detector/src/train.py -n /content/ph_final/train/images -t /content/ph_final/valid/images"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1693058000709,"user":{"displayName":"Vafelka","userId":"11276804272897708630"},"user_tz":-180},"id":"24WKrCOjAaNy","outputId":"63e6d940-f1a0-4b8d-8037-2b93633618bd"},"outputs":[{"output_type":"stream","name":"stdout","text":["GPU 0: Tesla T4 (UUID: GPU-dd5ac458-9640-7a22-f7bb-a7825c5cdeb1)\n"]}],"source":["!nvidia-smi -L"]}],"metadata":{"colab":{"provenance":[{"file_id":"1tu4-MKCV7CJdI6hW-CUwWJMaDysG_XPi","timestamp":1632159390949}],"gpuType":"T4"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"accelerator":"GPU"},"nbformat":4,"nbformat_minor":0}