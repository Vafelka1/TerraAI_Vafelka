{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Обработка текстов с помощью нейронных сетей | ДЗ ","provenance":[{"file_id":"1KMLe5j6dgq0kTg1kC9ytcpsc7CRzo7pT","timestamp":1634576621236},{"file_id":"1XnZ0jGYerRTX2laoipoC4m8v19SgMmy6","timestamp":1634561486636}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"3hahJ-ONkfmR"},"source":["Дорогой студент!\n","\n","В домашнем задании Ultra Pro занятия по обработке тектсов с помощью НС мы ставим задачу распознать уже не 6, как ранее, а целых 20 русских писателей! Это подразумевает и больший размер базы для обучения соответственно. Ячейка для скачивания базы уже включена в ноутбук задания.\n","\n","\n"," В задании необходимо выполнить следующие пункты:\n","\n","  1. Загрузить саму базу по ссылке и подговить файлы базы для обработки.\n","  2. Создать обучающую и проверочную выборки, обратив особое внимание на балансировку базы: количество примеров каждого класса должно быть примерно одного порядка. При этом для разбивки необходимо применить цикл.\n","  3. Подготовьте выборки для обучения и обучите сеть. Добейтесь результата точности сети не менее 95% на проверочной выборке модели Bag of Words и 75-80% - для модели Embedding.\n","   \n"]},{"cell_type":"markdown","metadata":{"id":"QolTxRtFWm3r"},"source":["## Загрузка данных"]},{"cell_type":"code","metadata":{"id":"pBys9ajOW43u","colab":{"base_uri":"https://localhost:8080/","height":106},"executionInfo":{"status":"ok","timestamp":1634571439694,"user_tz":-180,"elapsed":2939,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}},"outputId":"a830696c-9706-4f9f-875f-3b02e6091f5b"},"source":["import gdown                                      # Подключим функцию gdown\n","file_id = '1TeJxgfr2ZEY5Elil7XgM8WW7njI9Toqj'     # Обозначим ID файла в рамках ссылки\n","file_name = 'writers.zip'                         # Обозначим имя архива с базой\n","path = 'https://drive.google.com/uc?id='+file_id  # Укажем директорию для скачивания: ссылка на гугл-диск + ID файла\n","gdown.download(path, file_name, quiet=False)      # Скачивание файла"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["Downloading...\n","From: https://drive.google.com/uc?id=1TeJxgfr2ZEY5Elil7XgM8WW7njI9Toqj\n","To: /content/writers.zip\n","100%|██████████| 28.5M/28.5M [00:00<00:00, 88.3MB/s]\n"]},{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'writers.zip'"]},"metadata":{},"execution_count":1}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aB1K6RMKdgNa","executionInfo":{"status":"ok","timestamp":1634571440516,"user_tz":-180,"elapsed":839,"user":{"displayName":"Vafelka","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11276804272897708630"}},"outputId":"2ff94008-15d1-430c-e929-17fef7f03568"},"source":["wrt_path = '/content/writers'\n","!rm -rf {wrt_path}\n","!unzip -qo writers.zip -d writers/"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["writers/Русские писатели/:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Беляев.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨С╨╡╨╗╤П╨╡╨▓.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Булгаков.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨С╤Г╨╗╨│╨░╨║╨╛╨▓.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Васильев.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨Т╨░╤Б╨╕╨╗╤М╨╡╨▓.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Гоголь.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨У╨╛╨│╨╛╨╗╤М.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Гончаров.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨У╨╛╨╜╤З╨░╤А╨╛╨▓.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Горький.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨У╨╛╤А╤М╨║╨╕╨╣.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Грибоедов.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨У╤А╨╕╨▒╨╛╨╡╨┤╨╛╨▓.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Достоевский.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨Ф╨╛╤Б╤В╨╛╨╡╨▓╤Б╨║╨╕╨╣.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Каверин.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨Ъ╨░╨▓╨╡╤А╨╕╨╜.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Катаев.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨Ъ╨░╤В╨░╨╡╨▓.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Куприн.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨Ъ╤Г╨┐╤А╨╕╨╜.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Лермонтов.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨Ы╨╡╤А╨╝╨╛╨╜╤В╨╛╨▓.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Лесков.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨Ы╨╡╤Б╨║╨╛╨▓.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Носов.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨Э╨╛╤Б╨╛╨▓.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Пастернак.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨Я╨░╤Б╤В╨╡╤А╨╜╨░╨║.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Пушкин.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨Я╤Г╤И╨║╨╕╨╜.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Толстой.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨в╨╛╨╗╤Б╤В╨╛╨╣.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Тургенев.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨в╤Г╤А╨│╨╡╨╜╨╡╨▓.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Чехов.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨з╨╡╤Е╨╛╨▓.txt),\n","         continuing with \"central\" filename version\n","writers/Русские писатели/Шолохов.txt:  mismatching \"local\" filename (writers/╨а╤Г╤Б╤Б╨║╨╕╨╡ ╨┐╨╕╤Б╨░╤В╨╡╨╗╨╕/╨и╨╛╨╗╨╛╤Е╨╛╨▓.txt),\n","         continuing with \"central\" filename version\n"]}]},{"cell_type":"code","metadata":{"id":"yPVlJl82gwdy"},"source":["# Работа с массивами данных\n","import numpy as np \n","\n","# Функции-утилиты для работы с категориальными данными\n","from tensorflow.keras import utils\n","\n","# Класс для конструирования последовательной модели нейронной сети\n","from tensorflow.keras.models import Sequential\n","\n","# Основные слои\n","from tensorflow.keras.layers import Dense, Dropout, SpatialDropout1D, BatchNormalization, Embedding, Flatten, Activation \n","\n","# Токенизатор для преобразование текстов в последовательности\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","\n","# Матрица ошибок классификатора\n","from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","\n","# Загрузка датасетов из облака google\n","import gdown\n","\n","# Функции операционной системы\n","import os\n","\n","# Работа со временем\n","import time\n","\n","# Регулярные выражения\n","import re\n","\n","# Запись в файлы и чтение из файлов структур данных Python\n","import pickle\n","\n","# Отрисовка графиков\n","import matplotlib.pyplot as plt\n","\n","%matplotlib inline"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"r5a69YD7gnaL"},"source":["FILE_DIR  = 'writers/writers/Русские писатели'                     # Папка с текстовыми файлами\n","SIG_TRAIN = 'обучающая'                   # Признак обучающей выборки в имени файла\n","SIG_TEST  = 'тестовая'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"pypBE9Ljgqsh"},"source":["# Загрузка датасета. Добавляются имена классов и соответствующие тексты.\n","# Все тексты преобразуются в строку и объединяются для каждого класса и выборки\n","CLASS_LIST = []\n","text_train = []\n","text_test = []\n","\n","for file_name in os.listdir(FILE_DIR):\n","    # Выделение имени класса и типа выборки из имени файла\n","    m = re.match('[a-я]+', file_name)\n","    if m:\n","      class_name = m[0]\n","      if class_name not in CLASS_LIST:\n","            print(f'Добавление класса \"{class_name}\"')\n","            CLASS_LIST.append(class_name)\n","            # Инициализация соответствующих классу строк текста\n","            text_train.append('')\n","            text_test.append('')\n","\n","            # Поиск индекса класса для добавления содержимого файла в выборку\n","            cls = CLASS_LIST.index(class_name)\n","            print(f'Добавление файла \"{file_name}\" в класс \"{CLASS_LIST[cls]}\".')\n","            with open(f'{FILE_DIR}/{file_name}', 'r') as f:\n","                # Загрузка содержимого файла в строку\n","                text = f.read()\n","            # Добавление текста к соответствующей выборке класса. Концы строк заменяются на пробел\n","            text_train[cls] += ' ' + text.replace('\\n', ' ')\n","            text_test[cls] += ' ' + text.replace('\\n', ' ')\n","# Определение количества классов\n","CLASS_COUNT = len(CLASS_LIST)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"T0UKF59usvRl"},"source":["train_data =[]\n","for text_tr in text_train:\n","  length = int(len(text_tr) * 0.7)\n","  #print(len(text_tr))\n","  text_tr = text_tr[:length]\n","  #print(len(text_tr))\n","  #print()\n","  train_data.append(text_tr)\n","\n","test_data =[]\n","for text_ts in text_test:\n","  length = int(len(text_ts) * 0.7)\n","  #print(len(text_ts))\n","  text = text_ts[length:]\n","  #print(len(text_ts))\n","  #print()\n","  test_data.append(text)\n","\n","\n","for i in range(len(train_data)):\n","  print(len(train_data[i]))\n","  print(len(test_data[i]))\n","  print()\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dOisy-0QlmPT"},"source":["# Прочитанные классы текстов\n","print(CLASS_LIST)\n","\n","# Количество текстов в обучающей выборке\n","print(len(train_data))\n","\n","# Количество символов в одном из текстов обучающей выборки\n","print(len(train_data[0]))\n","print(len(test_data[0]))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7UZgaD5Kl5Lx"},"source":["for cls in range(CLASS_COUNT):\n","    print(f'Класс: {CLASS_LIST[cls]}')\n","    print(f'  train: {train_data[cls][:200]}')\n","    print(f'  test: {test_data[cls][:200]}')\n","    print()"],"execution_count":null,"outputs":[]}]}